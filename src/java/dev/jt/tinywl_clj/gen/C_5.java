// Generated by jextract

package dev.jt.tinywl_clj.gen;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class C_5 {

    C_5() {
        // Should not be called directly
    }

    static final Arena LIBRARY_ARENA = Arena.ofAuto();
    static final boolean TRACE_DOWNCALLS = Boolean.getBoolean("jextract.trace.downcalls");

    static void traceDowncall(String name, Object... args) {
         String traceArgs = Arrays.stream(args)
                       .map(Object::toString)
                       .collect(Collectors.joining(", "));
         System.out.printf("%s(%s)\n", name, traceArgs);
    }

    static MemorySegment findOrThrow(String symbol) {
        return SYMBOL_LOOKUP.find(symbol)
            .orElseThrow(() -> new UnsatisfiedLinkError("unresolved symbol: " + symbol));
    }

    static MethodHandle upcallHandle(Class<?> fi, String name, FunctionDescriptor fdesc) {
        try {
            return MethodHandles.lookup().findVirtual(fi, name, fdesc.toMethodType());
        } catch (ReflectiveOperationException ex) {
            throw new AssertionError(ex);
        }
    }

    static MemoryLayout align(MemoryLayout layout, long align) {
        return switch (layout) {
            case PaddingLayout p -> p;
            case ValueLayout v -> v.withByteAlignment(align);
            case GroupLayout g -> {
                MemoryLayout[] alignedMembers = g.memberLayouts().stream()
                        .map(m -> align(m, align)).toArray(MemoryLayout[]::new);
                yield g instanceof StructLayout ?
                        MemoryLayout.structLayout(alignedMembers) : MemoryLayout.unionLayout(alignedMembers);
            }
            case SequenceLayout s -> MemoryLayout.sequenceLayout(s.elementCount(), align(s.elementLayout(), align));
        };
    }

    static final SymbolLookup SYMBOL_LOOKUP = SymbolLookup.libraryLookup(System.mapLibraryName("wlroots"), LIBRARY_ARENA)
            .or(SymbolLookup.libraryLookup(System.mapLibraryName("wayland-server"), LIBRARY_ARENA))
            .or(SymbolLookup.loaderLookup())
            .or(Linker.nativeLinker().defaultLookup());

    public static final ValueLayout.OfBoolean C_BOOL = ValueLayout.JAVA_BOOLEAN;
    public static final ValueLayout.OfByte C_CHAR = ValueLayout.JAVA_BYTE;
    public static final ValueLayout.OfShort C_SHORT = ValueLayout.JAVA_SHORT;
    public static final ValueLayout.OfInt C_INT = ValueLayout.JAVA_INT;
    public static final ValueLayout.OfLong C_LONG_LONG = ValueLayout.JAVA_LONG;
    public static final ValueLayout.OfFloat C_FLOAT = ValueLayout.JAVA_FLOAT;
    public static final ValueLayout.OfDouble C_DOUBLE = ValueLayout.JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = ValueLayout.ADDRESS
            .withTargetLayout(MemoryLayout.sequenceLayout(java.lang.Long.MAX_VALUE, JAVA_BYTE));
    public static final ValueLayout.OfLong C_LONG = ValueLayout.JAVA_LONG;
    private static final int _SYS_TYPES_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _SYS_TYPES_H 1
     * }
     */
    public static int _SYS_TYPES_H() {
        return _SYS_TYPES_H;
    }
    private static final int _FEATURES_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _FEATURES_H 1
     * }
     */
    public static int _FEATURES_H() {
        return _FEATURES_H;
    }
    private static final int _DEFAULT_SOURCE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _DEFAULT_SOURCE 1
     * }
     */
    public static int _DEFAULT_SOURCE() {
        return _DEFAULT_SOURCE;
    }
    private static final int __GLIBC_USE_ISOC2X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_ISOC2X 0
     * }
     */
    public static int __GLIBC_USE_ISOC2X() {
        return __GLIBC_USE_ISOC2X;
    }
    private static final int __USE_ISOC11 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_ISOC11 1
     * }
     */
    public static int __USE_ISOC11() {
        return __USE_ISOC11;
    }
    private static final int __USE_ISOC99 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_ISOC99 1
     * }
     */
    public static int __USE_ISOC99() {
        return __USE_ISOC99;
    }
    private static final int __USE_ISOC95 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_ISOC95 1
     * }
     */
    public static int __USE_ISOC95() {
        return __USE_ISOC95;
    }
    private static final int __USE_POSIX_IMPLICITLY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_POSIX_IMPLICITLY 1
     * }
     */
    public static int __USE_POSIX_IMPLICITLY() {
        return __USE_POSIX_IMPLICITLY;
    }
    private static final int _POSIX_SOURCE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SOURCE 1
     * }
     */
    public static int _POSIX_SOURCE() {
        return _POSIX_SOURCE;
    }
    private static final int __USE_POSIX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_POSIX 1
     * }
     */
    public static int __USE_POSIX() {
        return __USE_POSIX;
    }
    private static final int __USE_POSIX2 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_POSIX2 1
     * }
     */
    public static int __USE_POSIX2() {
        return __USE_POSIX2;
    }
    private static final int __USE_POSIX199309 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_POSIX199309 1
     * }
     */
    public static int __USE_POSIX199309() {
        return __USE_POSIX199309;
    }
    private static final int __USE_POSIX199506 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_POSIX199506 1
     * }
     */
    public static int __USE_POSIX199506() {
        return __USE_POSIX199506;
    }
    private static final int __USE_XOPEN2K = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_XOPEN2K 1
     * }
     */
    public static int __USE_XOPEN2K() {
        return __USE_XOPEN2K;
    }
    private static final int __USE_XOPEN2K8 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_XOPEN2K8 1
     * }
     */
    public static int __USE_XOPEN2K8() {
        return __USE_XOPEN2K8;
    }
    private static final int _ATFILE_SOURCE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _ATFILE_SOURCE 1
     * }
     */
    public static int _ATFILE_SOURCE() {
        return _ATFILE_SOURCE;
    }
    private static final int __WORDSIZE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define __WORDSIZE 64
     * }
     */
    public static int __WORDSIZE() {
        return __WORDSIZE;
    }
    private static final int __WORDSIZE_TIME64_COMPAT32 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __WORDSIZE_TIME64_COMPAT32 1
     * }
     */
    public static int __WORDSIZE_TIME64_COMPAT32() {
        return __WORDSIZE_TIME64_COMPAT32;
    }
    private static final int __SYSCALL_WORDSIZE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define __SYSCALL_WORDSIZE 64
     * }
     */
    public static int __SYSCALL_WORDSIZE() {
        return __SYSCALL_WORDSIZE;
    }
    private static final int __USE_MISC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_MISC 1
     * }
     */
    public static int __USE_MISC() {
        return __USE_MISC;
    }
    private static final int __USE_ATFILE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __USE_ATFILE 1
     * }
     */
    public static int __USE_ATFILE() {
        return __USE_ATFILE;
    }
    private static final int __USE_FORTIFY_LEVEL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __USE_FORTIFY_LEVEL 0
     * }
     */
    public static int __USE_FORTIFY_LEVEL() {
        return __USE_FORTIFY_LEVEL;
    }
    private static final int __GLIBC_USE_DEPRECATED_GETS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_DEPRECATED_GETS 0
     * }
     */
    public static int __GLIBC_USE_DEPRECATED_GETS() {
        return __GLIBC_USE_DEPRECATED_GETS;
    }
    private static final int __GLIBC_USE_DEPRECATED_SCANF = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_DEPRECATED_SCANF 0
     * }
     */
    public static int __GLIBC_USE_DEPRECATED_SCANF() {
        return __GLIBC_USE_DEPRECATED_SCANF;
    }
    private static final int __GLIBC_USE_C2X_STRTOL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_C2X_STRTOL 0
     * }
     */
    public static int __GLIBC_USE_C2X_STRTOL() {
        return __GLIBC_USE_C2X_STRTOL;
    }
    private static final int _STDC_PREDEF_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _STDC_PREDEF_H 1
     * }
     */
    public static int _STDC_PREDEF_H() {
        return _STDC_PREDEF_H;
    }
    private static final int __STDC_IEC_559__ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __STDC_IEC_559__ 1
     * }
     */
    public static int __STDC_IEC_559__() {
        return __STDC_IEC_559__;
    }
    private static final int __STDC_IEC_559_COMPLEX__ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __STDC_IEC_559_COMPLEX__ 1
     * }
     */
    public static int __STDC_IEC_559_COMPLEX__() {
        return __STDC_IEC_559_COMPLEX__;
    }
    private static final int __GNU_LIBRARY__ = (int)6L;
    /**
     * {@snippet lang=c :
     * #define __GNU_LIBRARY__ 6
     * }
     */
    public static int __GNU_LIBRARY__() {
        return __GNU_LIBRARY__;
    }
    private static final int __GLIBC__ = (int)2L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC__ 2
     * }
     */
    public static int __GLIBC__() {
        return __GLIBC__;
    }
    private static final int __GLIBC_MINOR__ = (int)39L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_MINOR__ 39
     * }
     */
    public static int __GLIBC_MINOR__() {
        return __GLIBC_MINOR__;
    }
    private static final int _SYS_CDEFS_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _SYS_CDEFS_H 1
     * }
     */
    public static int _SYS_CDEFS_H() {
        return _SYS_CDEFS_H;
    }
    private static final int __glibc_c99_flexarr_available = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __glibc_c99_flexarr_available 1
     * }
     */
    public static int __glibc_c99_flexarr_available() {
        return __glibc_c99_flexarr_available;
    }
    private static final int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0
     * }
     */
    public static int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI() {
        return __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI;
    }
    private static final int __HAVE_GENERIC_SELECTION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_GENERIC_SELECTION 1
     * }
     */
    public static int __HAVE_GENERIC_SELECTION() {
        return __HAVE_GENERIC_SELECTION;
    }
    private static final int _BITS_TYPES_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_TYPES_H 1
     * }
     */
    public static int _BITS_TYPES_H() {
        return _BITS_TYPES_H;
    }
    private static final int _BITS_TYPESIZES_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_TYPESIZES_H 1
     * }
     */
    public static int _BITS_TYPESIZES_H() {
        return _BITS_TYPESIZES_H;
    }
    private static final int __OFF_T_MATCHES_OFF64_T = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __OFF_T_MATCHES_OFF64_T 1
     * }
     */
    public static int __OFF_T_MATCHES_OFF64_T() {
        return __OFF_T_MATCHES_OFF64_T;
    }
    private static final int __INO_T_MATCHES_INO64_T = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __INO_T_MATCHES_INO64_T 1
     * }
     */
    public static int __INO_T_MATCHES_INO64_T() {
        return __INO_T_MATCHES_INO64_T;
    }
    private static final int __RLIM_T_MATCHES_RLIM64_T = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __RLIM_T_MATCHES_RLIM64_T 1
     * }
     */
    public static int __RLIM_T_MATCHES_RLIM64_T() {
        return __RLIM_T_MATCHES_RLIM64_T;
    }
    private static final int __STATFS_MATCHES_STATFS64 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __STATFS_MATCHES_STATFS64 1
     * }
     */
    public static int __STATFS_MATCHES_STATFS64() {
        return __STATFS_MATCHES_STATFS64;
    }
    private static final int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 1
     * }
     */
    public static int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64() {
        return __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64;
    }
    private static final int __FD_SETSIZE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define __FD_SETSIZE 1024
     * }
     */
    public static int __FD_SETSIZE() {
        return __FD_SETSIZE;
    }
    private static final int _BITS_TIME64_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_TIME64_H 1
     * }
     */
    public static int _BITS_TIME64_H() {
        return _BITS_TIME64_H;
    }
    private static final int __clock_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __clock_t_defined 1
     * }
     */
    public static int __clock_t_defined() {
        return __clock_t_defined;
    }
    private static final int __clockid_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __clockid_t_defined 1
     * }
     */
    public static int __clockid_t_defined() {
        return __clockid_t_defined;
    }
    private static final int __time_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __time_t_defined 1
     * }
     */
    public static int __time_t_defined() {
        return __time_t_defined;
    }
    private static final int __timer_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __timer_t_defined 1
     * }
     */
    public static int __timer_t_defined() {
        return __timer_t_defined;
    }
    private static final int _BITS_STDINT_INTN_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_STDINT_INTN_H 1
     * }
     */
    public static int _BITS_STDINT_INTN_H() {
        return _BITS_STDINT_INTN_H;
    }
    private static final int __BIT_TYPES_DEFINED__ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __BIT_TYPES_DEFINED__ 1
     * }
     */
    public static int __BIT_TYPES_DEFINED__() {
        return __BIT_TYPES_DEFINED__;
    }
    private static final int _ENDIAN_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _ENDIAN_H 1
     * }
     */
    public static int _ENDIAN_H() {
        return _ENDIAN_H;
    }
    private static final int _BITS_ENDIAN_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_ENDIAN_H 1
     * }
     */
    public static int _BITS_ENDIAN_H() {
        return _BITS_ENDIAN_H;
    }
    private static final int __LITTLE_ENDIAN = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define __LITTLE_ENDIAN 1234
     * }
     */
    public static int __LITTLE_ENDIAN() {
        return __LITTLE_ENDIAN;
    }
    private static final int __BIG_ENDIAN = (int)4321L;
    /**
     * {@snippet lang=c :
     * #define __BIG_ENDIAN 4321
     * }
     */
    public static int __BIG_ENDIAN() {
        return __BIG_ENDIAN;
    }
    private static final int __PDP_ENDIAN = (int)3412L;
    /**
     * {@snippet lang=c :
     * #define __PDP_ENDIAN 3412
     * }
     */
    public static int __PDP_ENDIAN() {
        return __PDP_ENDIAN;
    }
    private static final int _BITS_ENDIANNESS_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_ENDIANNESS_H 1
     * }
     */
    public static int _BITS_ENDIANNESS_H() {
        return _BITS_ENDIANNESS_H;
    }
    private static final int _BITS_BYTESWAP_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_BYTESWAP_H 1
     * }
     */
    public static int _BITS_BYTESWAP_H() {
        return _BITS_BYTESWAP_H;
    }
    private static final int _BITS_UINTN_IDENTITY_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_UINTN_IDENTITY_H 1
     * }
     */
    public static int _BITS_UINTN_IDENTITY_H() {
        return _BITS_UINTN_IDENTITY_H;
    }
    private static final int _SYS_SELECT_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _SYS_SELECT_H 1
     * }
     */
    public static int _SYS_SELECT_H() {
        return _SYS_SELECT_H;
    }
    private static final int __sigset_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __sigset_t_defined 1
     * }
     */
    public static int __sigset_t_defined() {
        return __sigset_t_defined;
    }
    private static final int __timeval_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __timeval_defined 1
     * }
     */
    public static int __timeval_defined() {
        return __timeval_defined;
    }
    private static final int _STRUCT_TIMESPEC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _STRUCT_TIMESPEC 1
     * }
     */
    public static int _STRUCT_TIMESPEC() {
        return _STRUCT_TIMESPEC;
    }
    private static final int _BITS_PTHREADTYPES_COMMON_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_PTHREADTYPES_COMMON_H 1
     * }
     */
    public static int _BITS_PTHREADTYPES_COMMON_H() {
        return _BITS_PTHREADTYPES_COMMON_H;
    }
    private static final int _THREAD_SHARED_TYPES_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _THREAD_SHARED_TYPES_H 1
     * }
     */
    public static int _THREAD_SHARED_TYPES_H() {
        return _THREAD_SHARED_TYPES_H;
    }
    private static final int _BITS_PTHREADTYPES_ARCH_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_PTHREADTYPES_ARCH_H 1
     * }
     */
    public static int _BITS_PTHREADTYPES_ARCH_H() {
        return _BITS_PTHREADTYPES_ARCH_H;
    }
    private static final int __SIZEOF_PTHREAD_MUTEX_T = (int)40L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_MUTEX_T 40
     * }
     */
    public static int __SIZEOF_PTHREAD_MUTEX_T() {
        return __SIZEOF_PTHREAD_MUTEX_T;
    }
    private static final int __SIZEOF_PTHREAD_ATTR_T = (int)56L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_ATTR_T 56
     * }
     */
    public static int __SIZEOF_PTHREAD_ATTR_T() {
        return __SIZEOF_PTHREAD_ATTR_T;
    }
    private static final int __SIZEOF_PTHREAD_RWLOCK_T = (int)56L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_RWLOCK_T 56
     * }
     */
    public static int __SIZEOF_PTHREAD_RWLOCK_T() {
        return __SIZEOF_PTHREAD_RWLOCK_T;
    }
    private static final int __SIZEOF_PTHREAD_BARRIER_T = (int)32L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_BARRIER_T 32
     * }
     */
    public static int __SIZEOF_PTHREAD_BARRIER_T() {
        return __SIZEOF_PTHREAD_BARRIER_T;
    }
    private static final int __SIZEOF_PTHREAD_MUTEXATTR_T = (int)4L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_MUTEXATTR_T 4
     * }
     */
    public static int __SIZEOF_PTHREAD_MUTEXATTR_T() {
        return __SIZEOF_PTHREAD_MUTEXATTR_T;
    }
    private static final int __SIZEOF_PTHREAD_COND_T = (int)48L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_COND_T 48
     * }
     */
    public static int __SIZEOF_PTHREAD_COND_T() {
        return __SIZEOF_PTHREAD_COND_T;
    }
    private static final int __SIZEOF_PTHREAD_CONDATTR_T = (int)4L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_CONDATTR_T 4
     * }
     */
    public static int __SIZEOF_PTHREAD_CONDATTR_T() {
        return __SIZEOF_PTHREAD_CONDATTR_T;
    }
    private static final int __SIZEOF_PTHREAD_RWLOCKATTR_T = (int)8L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_RWLOCKATTR_T 8
     * }
     */
    public static int __SIZEOF_PTHREAD_RWLOCKATTR_T() {
        return __SIZEOF_PTHREAD_RWLOCKATTR_T;
    }
    private static final int __SIZEOF_PTHREAD_BARRIERATTR_T = (int)4L;
    /**
     * {@snippet lang=c :
     * #define __SIZEOF_PTHREAD_BARRIERATTR_T 4
     * }
     */
    public static int __SIZEOF_PTHREAD_BARRIERATTR_T() {
        return __SIZEOF_PTHREAD_BARRIERATTR_T;
    }
    private static final int _THREAD_MUTEX_INTERNAL_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _THREAD_MUTEX_INTERNAL_H 1
     * }
     */
    public static int _THREAD_MUTEX_INTERNAL_H() {
        return _THREAD_MUTEX_INTERNAL_H;
    }
    private static final int __PTHREAD_MUTEX_HAVE_PREV = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEX_HAVE_PREV 1
     * }
     */
    public static int __PTHREAD_MUTEX_HAVE_PREV() {
        return __PTHREAD_MUTEX_HAVE_PREV;
    }
    private static final int __have_pthread_attr_t = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __have_pthread_attr_t 1
     * }
     */
    public static int __have_pthread_attr_t() {
        return __have_pthread_attr_t;
    }
    private static final int _STDINT_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _STDINT_H 1
     * }
     */
    public static int _STDINT_H() {
        return _STDINT_H;
    }
    private static final int __GLIBC_USE_LIB_EXT2 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_LIB_EXT2 0
     * }
     */
    public static int __GLIBC_USE_LIB_EXT2() {
        return __GLIBC_USE_LIB_EXT2;
    }
    private static final int __GLIBC_USE_IEC_60559_BFP_EXT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_IEC_60559_BFP_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_BFP_EXT() {
        return __GLIBC_USE_IEC_60559_BFP_EXT;
    }
    private static final int __GLIBC_USE_IEC_60559_BFP_EXT_C2X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_BFP_EXT_C2X() {
        return __GLIBC_USE_IEC_60559_BFP_EXT_C2X;
    }
    private static final int __GLIBC_USE_IEC_60559_EXT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_IEC_60559_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_EXT() {
        return __GLIBC_USE_IEC_60559_EXT;
    }
    private static final int __GLIBC_USE_IEC_60559_FUNCS_EXT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_IEC_60559_FUNCS_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT() {
        return __GLIBC_USE_IEC_60559_FUNCS_EXT;
    }
    private static final int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X() {
        return __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X;
    }
    private static final int __GLIBC_USE_IEC_60559_TYPES_EXT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __GLIBC_USE_IEC_60559_TYPES_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_TYPES_EXT() {
        return __GLIBC_USE_IEC_60559_TYPES_EXT;
    }
    private static final int _BITS_WCHAR_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_WCHAR_H 1
     * }
     */
    public static int _BITS_WCHAR_H() {
        return _BITS_WCHAR_H;
    }
    private static final int _BITS_STDINT_UINTN_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_STDINT_UINTN_H 1
     * }
     */
    public static int _BITS_STDINT_UINTN_H() {
        return _BITS_STDINT_UINTN_H;
    }
    private static final int _BITS_STDINT_LEAST_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_STDINT_LEAST_H 1
     * }
     */
    public static int _BITS_STDINT_LEAST_H() {
        return _BITS_STDINT_LEAST_H;
    }
    private static final int __bool_true_false_are_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __bool_true_false_are_defined 1
     * }
     */
    public static int __bool_true_false_are_defined() {
        return __bool_true_false_are_defined;
    }
    private static final int true_ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define true 1
     * }
     */
    public static int true_() {
        return true_;
    }
    private static final int false_ = (int)0L;
    /**
     * {@snippet lang=c :
     * #define false 0
     * }
     */
    public static int false_() {
        return false_;
    }
    private static final int _MATH_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _MATH_H 1
     * }
     */
    public static int _MATH_H() {
        return _MATH_H;
    }
    private static final int _BITS_LIBM_SIMD_DECL_STUBS_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_LIBM_SIMD_DECL_STUBS_H 1
     * }
     */
    public static int _BITS_LIBM_SIMD_DECL_STUBS_H() {
        return _BITS_LIBM_SIMD_DECL_STUBS_H;
    }
    private static final int __HAVE_FLOAT128 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT128 0
     * }
     */
    public static int __HAVE_FLOAT128() {
        return __HAVE_FLOAT128;
    }
    private static final int __HAVE_DISTINCT_FLOAT128 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT128 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT128() {
        return __HAVE_DISTINCT_FLOAT128;
    }
    private static final int __HAVE_FLOAT64X = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT64X 1
     * }
     */
    public static int __HAVE_FLOAT64X() {
        return __HAVE_FLOAT64X;
    }
    private static final int __HAVE_FLOAT64X_LONG_DOUBLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT64X_LONG_DOUBLE 1
     * }
     */
    public static int __HAVE_FLOAT64X_LONG_DOUBLE() {
        return __HAVE_FLOAT64X_LONG_DOUBLE;
    }
    private static final int __HAVE_FLOAT16 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT16 0
     * }
     */
    public static int __HAVE_FLOAT16() {
        return __HAVE_FLOAT16;
    }
    private static final int __HAVE_FLOAT32 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT32 1
     * }
     */
    public static int __HAVE_FLOAT32() {
        return __HAVE_FLOAT32;
    }
    private static final int __HAVE_FLOAT64 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT64 1
     * }
     */
    public static int __HAVE_FLOAT64() {
        return __HAVE_FLOAT64;
    }
    private static final int __HAVE_FLOAT32X = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT32X 1
     * }
     */
    public static int __HAVE_FLOAT32X() {
        return __HAVE_FLOAT32X;
    }
    private static final int __HAVE_FLOAT128X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT128X 0
     * }
     */
    public static int __HAVE_FLOAT128X() {
        return __HAVE_FLOAT128X;
    }
    private static final int __HAVE_DISTINCT_FLOAT32 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT32 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT32() {
        return __HAVE_DISTINCT_FLOAT32;
    }
    private static final int __HAVE_DISTINCT_FLOAT64 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT64 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT64() {
        return __HAVE_DISTINCT_FLOAT64;
    }
    private static final int __HAVE_DISTINCT_FLOAT32X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT32X 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT32X() {
        return __HAVE_DISTINCT_FLOAT32X;
    }
    private static final int __HAVE_DISTINCT_FLOAT64X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT64X 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT64X() {
        return __HAVE_DISTINCT_FLOAT64X;
    }
    private static final int __HAVE_FLOATN_NOT_TYPEDEF = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOATN_NOT_TYPEDEF 0
     * }
     */
    public static int __HAVE_FLOATN_NOT_TYPEDEF() {
        return __HAVE_FLOATN_NOT_TYPEDEF;
    }
    private static final int __FP_LOGB0_IS_MIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __FP_LOGB0_IS_MIN 1
     * }
     */
    public static int __FP_LOGB0_IS_MIN() {
        return __FP_LOGB0_IS_MIN;
    }
    private static final int __FP_LOGBNAN_IS_MIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __FP_LOGBNAN_IS_MIN 1
     * }
     */
    public static int __FP_LOGBNAN_IS_MIN() {
        return __FP_LOGBNAN_IS_MIN;
    }
    private static final int __MATH_DECLARING_DOUBLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __MATH_DECLARING_DOUBLE 1
     * }
     */
    public static int __MATH_DECLARING_DOUBLE() {
        return __MATH_DECLARING_DOUBLE;
    }
    private static final int __MATH_DECLARING_FLOATN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __MATH_DECLARING_FLOATN 0
     * }
     */
    public static int __MATH_DECLARING_FLOATN() {
        return __MATH_DECLARING_FLOATN;
    }
    private static final int __MATH_DECLARE_LDOUBLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __MATH_DECLARE_LDOUBLE 1
     * }
     */
    public static int __MATH_DECLARE_LDOUBLE() {
        return __MATH_DECLARE_LDOUBLE;
    }
    private static final int FP_NAN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define FP_NAN 0
     * }
     */
    public static int FP_NAN() {
        return FP_NAN;
    }
    private static final int FP_INFINITE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FP_INFINITE 1
     * }
     */
    public static int FP_INFINITE() {
        return FP_INFINITE;
    }
    private static final int FP_ZERO = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FP_ZERO 2
     * }
     */
    public static int FP_ZERO() {
        return FP_ZERO;
    }
    private static final int FP_SUBNORMAL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define FP_SUBNORMAL 3
     * }
     */
    public static int FP_SUBNORMAL() {
        return FP_SUBNORMAL;
    }
    private static final int FP_NORMAL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FP_NORMAL 4
     * }
     */
    public static int FP_NORMAL() {
        return FP_NORMAL;
    }
    private static final int MATH_ERRNO = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MATH_ERRNO 1
     * }
     */
    public static int MATH_ERRNO() {
        return MATH_ERRNO;
    }
    private static final int MATH_ERREXCEPT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MATH_ERREXCEPT 2
     * }
     */
    public static int MATH_ERREXCEPT() {
        return MATH_ERREXCEPT;
    }
    private static final int _INTTYPES_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _INTTYPES_H 1
     * }
     */
    public static int _INTTYPES_H() {
        return _INTTYPES_H;
    }
    private static final int ____gwchar_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ____gwchar_t_defined 1
     * }
     */
    public static int ____gwchar_t_defined() {
        return ____gwchar_t_defined;
    }
    private static final int WAYLAND_VERSION_MAJOR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WAYLAND_VERSION_MAJOR 1
     * }
     */
    public static int WAYLAND_VERSION_MAJOR() {
        return WAYLAND_VERSION_MAJOR;
    }
    private static final int WAYLAND_VERSION_MINOR = (int)22L;
    /**
     * {@snippet lang=c :
     * #define WAYLAND_VERSION_MINOR 22
     * }
     */
    public static int WAYLAND_VERSION_MINOR() {
        return WAYLAND_VERSION_MINOR;
    }
    private static final int WAYLAND_VERSION_MICRO = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WAYLAND_VERSION_MICRO 0
     * }
     */
    public static int WAYLAND_VERSION_MICRO() {
        return WAYLAND_VERSION_MICRO;
    }
    private static final int WL_DISPLAY_ERROR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_DISPLAY_ERROR 0
     * }
     */
    public static int WL_DISPLAY_ERROR() {
        return WL_DISPLAY_ERROR;
    }
    private static final int WL_DISPLAY_DELETE_ID = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DISPLAY_DELETE_ID 1
     * }
     */
    public static int WL_DISPLAY_DELETE_ID() {
        return WL_DISPLAY_DELETE_ID;
    }
    private static final int WL_DISPLAY_ERROR_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DISPLAY_ERROR_SINCE_VERSION 1
     * }
     */
    public static int WL_DISPLAY_ERROR_SINCE_VERSION() {
        return WL_DISPLAY_ERROR_SINCE_VERSION;
    }
    private static final int WL_DISPLAY_DELETE_ID_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DISPLAY_DELETE_ID_SINCE_VERSION 1
     * }
     */
    public static int WL_DISPLAY_DELETE_ID_SINCE_VERSION() {
        return WL_DISPLAY_DELETE_ID_SINCE_VERSION;
    }
    private static final int WL_DISPLAY_SYNC_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DISPLAY_SYNC_SINCE_VERSION 1
     * }
     */
    public static int WL_DISPLAY_SYNC_SINCE_VERSION() {
        return WL_DISPLAY_SYNC_SINCE_VERSION;
    }
    private static final int WL_DISPLAY_GET_REGISTRY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DISPLAY_GET_REGISTRY_SINCE_VERSION 1
     * }
     */
    public static int WL_DISPLAY_GET_REGISTRY_SINCE_VERSION() {
        return WL_DISPLAY_GET_REGISTRY_SINCE_VERSION;
    }
    private static final int WL_REGISTRY_GLOBAL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_REGISTRY_GLOBAL 0
     * }
     */
    public static int WL_REGISTRY_GLOBAL() {
        return WL_REGISTRY_GLOBAL;
    }
    private static final int WL_REGISTRY_GLOBAL_REMOVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGISTRY_GLOBAL_REMOVE 1
     * }
     */
    public static int WL_REGISTRY_GLOBAL_REMOVE() {
        return WL_REGISTRY_GLOBAL_REMOVE;
    }
    private static final int WL_REGISTRY_GLOBAL_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGISTRY_GLOBAL_SINCE_VERSION 1
     * }
     */
    public static int WL_REGISTRY_GLOBAL_SINCE_VERSION() {
        return WL_REGISTRY_GLOBAL_SINCE_VERSION;
    }
    private static final int WL_REGISTRY_GLOBAL_REMOVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGISTRY_GLOBAL_REMOVE_SINCE_VERSION 1
     * }
     */
    public static int WL_REGISTRY_GLOBAL_REMOVE_SINCE_VERSION() {
        return WL_REGISTRY_GLOBAL_REMOVE_SINCE_VERSION;
    }
    private static final int WL_REGISTRY_BIND_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGISTRY_BIND_SINCE_VERSION 1
     * }
     */
    public static int WL_REGISTRY_BIND_SINCE_VERSION() {
        return WL_REGISTRY_BIND_SINCE_VERSION;
    }
    private static final int WL_CALLBACK_DONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_CALLBACK_DONE 0
     * }
     */
    public static int WL_CALLBACK_DONE() {
        return WL_CALLBACK_DONE;
    }
    private static final int WL_CALLBACK_DONE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_CALLBACK_DONE_SINCE_VERSION 1
     * }
     */
    public static int WL_CALLBACK_DONE_SINCE_VERSION() {
        return WL_CALLBACK_DONE_SINCE_VERSION;
    }
    private static final int WL_COMPOSITOR_CREATE_SURFACE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_COMPOSITOR_CREATE_SURFACE_SINCE_VERSION 1
     * }
     */
    public static int WL_COMPOSITOR_CREATE_SURFACE_SINCE_VERSION() {
        return WL_COMPOSITOR_CREATE_SURFACE_SINCE_VERSION;
    }
    private static final int WL_COMPOSITOR_CREATE_REGION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_COMPOSITOR_CREATE_REGION_SINCE_VERSION 1
     * }
     */
    public static int WL_COMPOSITOR_CREATE_REGION_SINCE_VERSION() {
        return WL_COMPOSITOR_CREATE_REGION_SINCE_VERSION;
    }
    private static final int WL_SHM_POOL_CREATE_BUFFER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHM_POOL_CREATE_BUFFER_SINCE_VERSION 1
     * }
     */
    public static int WL_SHM_POOL_CREATE_BUFFER_SINCE_VERSION() {
        return WL_SHM_POOL_CREATE_BUFFER_SINCE_VERSION;
    }
    private static final int WL_SHM_POOL_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHM_POOL_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_SHM_POOL_DESTROY_SINCE_VERSION() {
        return WL_SHM_POOL_DESTROY_SINCE_VERSION;
    }
    private static final int WL_SHM_POOL_RESIZE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHM_POOL_RESIZE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHM_POOL_RESIZE_SINCE_VERSION() {
        return WL_SHM_POOL_RESIZE_SINCE_VERSION;
    }
    private static final int WL_SHM_FORMAT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_SHM_FORMAT 0
     * }
     */
    public static int WL_SHM_FORMAT() {
        return WL_SHM_FORMAT;
    }
    private static final int WL_SHM_FORMAT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHM_FORMAT_SINCE_VERSION 1
     * }
     */
    public static int WL_SHM_FORMAT_SINCE_VERSION() {
        return WL_SHM_FORMAT_SINCE_VERSION;
    }
    private static final int WL_SHM_CREATE_POOL_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHM_CREATE_POOL_SINCE_VERSION 1
     * }
     */
    public static int WL_SHM_CREATE_POOL_SINCE_VERSION() {
        return WL_SHM_CREATE_POOL_SINCE_VERSION;
    }
    private static final int WL_BUFFER_RELEASE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_BUFFER_RELEASE 0
     * }
     */
    public static int WL_BUFFER_RELEASE() {
        return WL_BUFFER_RELEASE;
    }
    private static final int WL_BUFFER_RELEASE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_BUFFER_RELEASE_SINCE_VERSION 1
     * }
     */
    public static int WL_BUFFER_RELEASE_SINCE_VERSION() {
        return WL_BUFFER_RELEASE_SINCE_VERSION;
    }
    private static final int WL_BUFFER_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_BUFFER_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_BUFFER_DESTROY_SINCE_VERSION() {
        return WL_BUFFER_DESTROY_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_OFFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_OFFER 0
     * }
     */
    public static int WL_DATA_OFFER_OFFER() {
        return WL_DATA_OFFER_OFFER;
    }
    private static final int WL_DATA_OFFER_SOURCE_ACTIONS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_SOURCE_ACTIONS 1
     * }
     */
    public static int WL_DATA_OFFER_SOURCE_ACTIONS() {
        return WL_DATA_OFFER_SOURCE_ACTIONS;
    }
    private static final int WL_DATA_OFFER_ACTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_ACTION 2
     * }
     */
    public static int WL_DATA_OFFER_ACTION() {
        return WL_DATA_OFFER_ACTION;
    }
    private static final int WL_DATA_OFFER_OFFER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_OFFER_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_OFFER_OFFER_SINCE_VERSION() {
        return WL_DATA_OFFER_OFFER_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_SOURCE_ACTIONS_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_SOURCE_ACTIONS_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_OFFER_SOURCE_ACTIONS_SINCE_VERSION() {
        return WL_DATA_OFFER_SOURCE_ACTIONS_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_ACTION_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_ACTION_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_OFFER_ACTION_SINCE_VERSION() {
        return WL_DATA_OFFER_ACTION_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_ACCEPT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_ACCEPT_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_OFFER_ACCEPT_SINCE_VERSION() {
        return WL_DATA_OFFER_ACCEPT_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_RECEIVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_RECEIVE_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_OFFER_RECEIVE_SINCE_VERSION() {
        return WL_DATA_OFFER_RECEIVE_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_OFFER_DESTROY_SINCE_VERSION() {
        return WL_DATA_OFFER_DESTROY_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_FINISH_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_FINISH_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_OFFER_FINISH_SINCE_VERSION() {
        return WL_DATA_OFFER_FINISH_SINCE_VERSION;
    }
    private static final int WL_DATA_OFFER_SET_ACTIONS_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_OFFER_SET_ACTIONS_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_OFFER_SET_ACTIONS_SINCE_VERSION() {
        return WL_DATA_OFFER_SET_ACTIONS_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_TARGET = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_TARGET 0
     * }
     */
    public static int WL_DATA_SOURCE_TARGET() {
        return WL_DATA_SOURCE_TARGET;
    }
    private static final int WL_DATA_SOURCE_SEND = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_SEND 1
     * }
     */
    public static int WL_DATA_SOURCE_SEND() {
        return WL_DATA_SOURCE_SEND;
    }
    private static final int WL_DATA_SOURCE_CANCELLED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_CANCELLED 2
     * }
     */
    public static int WL_DATA_SOURCE_CANCELLED() {
        return WL_DATA_SOURCE_CANCELLED;
    }
    private static final int WL_DATA_SOURCE_DND_DROP_PERFORMED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_DND_DROP_PERFORMED 3
     * }
     */
    public static int WL_DATA_SOURCE_DND_DROP_PERFORMED() {
        return WL_DATA_SOURCE_DND_DROP_PERFORMED;
    }
    private static final int WL_DATA_SOURCE_DND_FINISHED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_DND_FINISHED 4
     * }
     */
    public static int WL_DATA_SOURCE_DND_FINISHED() {
        return WL_DATA_SOURCE_DND_FINISHED;
    }
    private static final int WL_DATA_SOURCE_ACTION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_ACTION 5
     * }
     */
    public static int WL_DATA_SOURCE_ACTION() {
        return WL_DATA_SOURCE_ACTION;
    }
    private static final int WL_DATA_SOURCE_TARGET_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_TARGET_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_SOURCE_TARGET_SINCE_VERSION() {
        return WL_DATA_SOURCE_TARGET_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_SEND_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_SEND_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_SOURCE_SEND_SINCE_VERSION() {
        return WL_DATA_SOURCE_SEND_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_CANCELLED_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_CANCELLED_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_SOURCE_CANCELLED_SINCE_VERSION() {
        return WL_DATA_SOURCE_CANCELLED_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_DND_DROP_PERFORMED_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_DND_DROP_PERFORMED_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_SOURCE_DND_DROP_PERFORMED_SINCE_VERSION() {
        return WL_DATA_SOURCE_DND_DROP_PERFORMED_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION() {
        return WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_ACTION_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_ACTION_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_SOURCE_ACTION_SINCE_VERSION() {
        return WL_DATA_SOURCE_ACTION_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_OFFER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_OFFER_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_SOURCE_OFFER_SINCE_VERSION() {
        return WL_DATA_SOURCE_OFFER_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_SOURCE_DESTROY_SINCE_VERSION() {
        return WL_DATA_SOURCE_DESTROY_SINCE_VERSION;
    }
    private static final int WL_DATA_SOURCE_SET_ACTIONS_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_SOURCE_SET_ACTIONS_SINCE_VERSION 3
     * }
     */
    public static int WL_DATA_SOURCE_SET_ACTIONS_SINCE_VERSION() {
        return WL_DATA_SOURCE_SET_ACTIONS_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_DATA_OFFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_DATA_OFFER 0
     * }
     */
    public static int WL_DATA_DEVICE_DATA_OFFER() {
        return WL_DATA_DEVICE_DATA_OFFER;
    }
    private static final int WL_DATA_DEVICE_ENTER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_ENTER 1
     * }
     */
    public static int WL_DATA_DEVICE_ENTER() {
        return WL_DATA_DEVICE_ENTER;
    }
    private static final int WL_DATA_DEVICE_LEAVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_LEAVE 2
     * }
     */
    public static int WL_DATA_DEVICE_LEAVE() {
        return WL_DATA_DEVICE_LEAVE;
    }
    private static final int WL_DATA_DEVICE_MOTION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_MOTION 3
     * }
     */
    public static int WL_DATA_DEVICE_MOTION() {
        return WL_DATA_DEVICE_MOTION;
    }
    private static final int WL_DATA_DEVICE_DROP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_DROP 4
     * }
     */
    public static int WL_DATA_DEVICE_DROP() {
        return WL_DATA_DEVICE_DROP;
    }
    private static final int WL_DATA_DEVICE_SELECTION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_SELECTION 5
     * }
     */
    public static int WL_DATA_DEVICE_SELECTION() {
        return WL_DATA_DEVICE_SELECTION;
    }
    private static final int WL_DATA_DEVICE_DATA_OFFER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_DATA_OFFER_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_DATA_OFFER_SINCE_VERSION() {
        return WL_DATA_DEVICE_DATA_OFFER_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_ENTER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_ENTER_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_ENTER_SINCE_VERSION() {
        return WL_DATA_DEVICE_ENTER_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_LEAVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_LEAVE_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_LEAVE_SINCE_VERSION() {
        return WL_DATA_DEVICE_LEAVE_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_MOTION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_MOTION_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_MOTION_SINCE_VERSION() {
        return WL_DATA_DEVICE_MOTION_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_DROP_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_DROP_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_DROP_SINCE_VERSION() {
        return WL_DATA_DEVICE_DROP_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_SELECTION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_SELECTION_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_SELECTION_SINCE_VERSION() {
        return WL_DATA_DEVICE_SELECTION_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_START_DRAG_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_START_DRAG_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_START_DRAG_SINCE_VERSION() {
        return WL_DATA_DEVICE_START_DRAG_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_SET_SELECTION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_SET_SELECTION_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_SET_SELECTION_SINCE_VERSION() {
        return WL_DATA_DEVICE_SET_SELECTION_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_RELEASE_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_RELEASE_SINCE_VERSION 2
     * }
     */
    public static int WL_DATA_DEVICE_RELEASE_SINCE_VERSION() {
        return WL_DATA_DEVICE_RELEASE_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE_SINCE_VERSION() {
        return WL_DATA_DEVICE_MANAGER_CREATE_DATA_SOURCE_SINCE_VERSION;
    }
    private static final int WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE_SINCE_VERSION 1
     * }
     */
    public static int WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE_SINCE_VERSION() {
        return WL_DATA_DEVICE_MANAGER_GET_DATA_DEVICE_SINCE_VERSION;
    }
    private static final int WL_SHELL_GET_SHELL_SURFACE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_GET_SHELL_SURFACE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_GET_SHELL_SURFACE_SINCE_VERSION() {
        return WL_SHELL_GET_SHELL_SURFACE_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_PING = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_PING 0
     * }
     */
    public static int WL_SHELL_SURFACE_PING() {
        return WL_SHELL_SURFACE_PING;
    }
    private static final int WL_SHELL_SURFACE_CONFIGURE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_CONFIGURE 1
     * }
     */
    public static int WL_SHELL_SURFACE_CONFIGURE() {
        return WL_SHELL_SURFACE_CONFIGURE;
    }
    private static final int WL_SHELL_SURFACE_POPUP_DONE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_POPUP_DONE 2
     * }
     */
    public static int WL_SHELL_SURFACE_POPUP_DONE() {
        return WL_SHELL_SURFACE_POPUP_DONE;
    }
    private static final int WL_SHELL_SURFACE_PING_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_PING_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_PING_SINCE_VERSION() {
        return WL_SHELL_SURFACE_PING_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_CONFIGURE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_CONFIGURE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_CONFIGURE_SINCE_VERSION() {
        return WL_SHELL_SURFACE_CONFIGURE_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_POPUP_DONE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_POPUP_DONE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_POPUP_DONE_SINCE_VERSION() {
        return WL_SHELL_SURFACE_POPUP_DONE_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_PONG_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_PONG_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_PONG_SINCE_VERSION() {
        return WL_SHELL_SURFACE_PONG_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_MOVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_MOVE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_MOVE_SINCE_VERSION() {
        return WL_SHELL_SURFACE_MOVE_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_RESIZE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_RESIZE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_RESIZE_SINCE_VERSION() {
        return WL_SHELL_SURFACE_RESIZE_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_TOPLEVEL_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_TOPLEVEL_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_TOPLEVEL_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_TOPLEVEL_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_TRANSIENT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_TRANSIENT_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_TRANSIENT_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_TRANSIENT_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_FULLSCREEN_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_FULLSCREEN_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_FULLSCREEN_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_FULLSCREEN_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_POPUP_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_POPUP_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_POPUP_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_POPUP_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_MAXIMIZED_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_MAXIMIZED_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_MAXIMIZED_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_MAXIMIZED_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_TITLE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_TITLE_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_TITLE_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_TITLE_SINCE_VERSION;
    }
    private static final int WL_SHELL_SURFACE_SET_CLASS_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SHELL_SURFACE_SET_CLASS_SINCE_VERSION 1
     * }
     */
    public static int WL_SHELL_SURFACE_SET_CLASS_SINCE_VERSION() {
        return WL_SHELL_SURFACE_SET_CLASS_SINCE_VERSION;
    }
    private static final int WL_SURFACE_ENTER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_ENTER 0
     * }
     */
    public static int WL_SURFACE_ENTER() {
        return WL_SURFACE_ENTER;
    }
    private static final int WL_SURFACE_LEAVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_LEAVE 1
     * }
     */
    public static int WL_SURFACE_LEAVE() {
        return WL_SURFACE_LEAVE;
    }
    private static final int WL_SURFACE_PREFERRED_BUFFER_SCALE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_PREFERRED_BUFFER_SCALE 2
     * }
     */
    public static int WL_SURFACE_PREFERRED_BUFFER_SCALE() {
        return WL_SURFACE_PREFERRED_BUFFER_SCALE;
    }
    private static final int WL_SURFACE_PREFERRED_BUFFER_TRANSFORM = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_PREFERRED_BUFFER_TRANSFORM 3
     * }
     */
    public static int WL_SURFACE_PREFERRED_BUFFER_TRANSFORM() {
        return WL_SURFACE_PREFERRED_BUFFER_TRANSFORM;
    }
    private static final int WL_SURFACE_ENTER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_ENTER_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_ENTER_SINCE_VERSION() {
        return WL_SURFACE_ENTER_SINCE_VERSION;
    }
    private static final int WL_SURFACE_LEAVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_LEAVE_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_LEAVE_SINCE_VERSION() {
        return WL_SURFACE_LEAVE_SINCE_VERSION;
    }
    private static final int WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION 6
     * }
     */
    public static int WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION() {
        return WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION;
    }
    private static final int WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION 6
     * }
     */
    public static int WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION() {
        return WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION;
    }
    private static final int WL_SURFACE_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_DESTROY_SINCE_VERSION() {
        return WL_SURFACE_DESTROY_SINCE_VERSION;
    }
    private static final int WL_SURFACE_ATTACH_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_ATTACH_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_ATTACH_SINCE_VERSION() {
        return WL_SURFACE_ATTACH_SINCE_VERSION;
    }
    private static final int WL_SURFACE_DAMAGE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_DAMAGE_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_DAMAGE_SINCE_VERSION() {
        return WL_SURFACE_DAMAGE_SINCE_VERSION;
    }
    private static final int WL_SURFACE_FRAME_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_FRAME_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_FRAME_SINCE_VERSION() {
        return WL_SURFACE_FRAME_SINCE_VERSION;
    }
    private static final int WL_SURFACE_SET_OPAQUE_REGION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_SET_OPAQUE_REGION_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_SET_OPAQUE_REGION_SINCE_VERSION() {
        return WL_SURFACE_SET_OPAQUE_REGION_SINCE_VERSION;
    }
    private static final int WL_SURFACE_SET_INPUT_REGION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_SET_INPUT_REGION_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_SET_INPUT_REGION_SINCE_VERSION() {
        return WL_SURFACE_SET_INPUT_REGION_SINCE_VERSION;
    }
    private static final int WL_SURFACE_COMMIT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_COMMIT_SINCE_VERSION 1
     * }
     */
    public static int WL_SURFACE_COMMIT_SINCE_VERSION() {
        return WL_SURFACE_COMMIT_SINCE_VERSION;
    }
    private static final int WL_SURFACE_SET_BUFFER_TRANSFORM_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_SET_BUFFER_TRANSFORM_SINCE_VERSION 2
     * }
     */
    public static int WL_SURFACE_SET_BUFFER_TRANSFORM_SINCE_VERSION() {
        return WL_SURFACE_SET_BUFFER_TRANSFORM_SINCE_VERSION;
    }
    private static final int WL_SURFACE_SET_BUFFER_SCALE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_SET_BUFFER_SCALE_SINCE_VERSION 3
     * }
     */
    public static int WL_SURFACE_SET_BUFFER_SCALE_SINCE_VERSION() {
        return WL_SURFACE_SET_BUFFER_SCALE_SINCE_VERSION;
    }
    private static final int WL_SURFACE_DAMAGE_BUFFER_SINCE_VERSION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_DAMAGE_BUFFER_SINCE_VERSION 4
     * }
     */
    public static int WL_SURFACE_DAMAGE_BUFFER_SINCE_VERSION() {
        return WL_SURFACE_DAMAGE_BUFFER_SINCE_VERSION;
    }
    private static final int WL_SURFACE_OFFSET_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_SURFACE_OFFSET_SINCE_VERSION 5
     * }
     */
    public static int WL_SURFACE_OFFSET_SINCE_VERSION() {
        return WL_SURFACE_OFFSET_SINCE_VERSION;
    }
    private static final int WL_SEAT_CAPABILITIES = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_CAPABILITIES 0
     * }
     */
    public static int WL_SEAT_CAPABILITIES() {
        return WL_SEAT_CAPABILITIES;
    }
    private static final int WL_SEAT_NAME = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_NAME 1
     * }
     */
    public static int WL_SEAT_NAME() {
        return WL_SEAT_NAME;
    }
    private static final int WL_SEAT_CAPABILITIES_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_CAPABILITIES_SINCE_VERSION 1
     * }
     */
    public static int WL_SEAT_CAPABILITIES_SINCE_VERSION() {
        return WL_SEAT_CAPABILITIES_SINCE_VERSION;
    }
    private static final int WL_SEAT_NAME_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_NAME_SINCE_VERSION 2
     * }
     */
    public static int WL_SEAT_NAME_SINCE_VERSION() {
        return WL_SEAT_NAME_SINCE_VERSION;
    }
    private static final int WL_SEAT_GET_POINTER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_GET_POINTER_SINCE_VERSION 1
     * }
     */
    public static int WL_SEAT_GET_POINTER_SINCE_VERSION() {
        return WL_SEAT_GET_POINTER_SINCE_VERSION;
    }
    private static final int WL_SEAT_GET_KEYBOARD_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_GET_KEYBOARD_SINCE_VERSION 1
     * }
     */
    public static int WL_SEAT_GET_KEYBOARD_SINCE_VERSION() {
        return WL_SEAT_GET_KEYBOARD_SINCE_VERSION;
    }
    private static final int WL_SEAT_GET_TOUCH_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_GET_TOUCH_SINCE_VERSION 1
     * }
     */
    public static int WL_SEAT_GET_TOUCH_SINCE_VERSION() {
        return WL_SEAT_GET_TOUCH_SINCE_VERSION;
    }
    private static final int WL_SEAT_RELEASE_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_SEAT_RELEASE_SINCE_VERSION 5
     * }
     */
    public static int WL_SEAT_RELEASE_SINCE_VERSION() {
        return WL_SEAT_RELEASE_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_SOURCE_WHEEL_TILT_SINCE_VERSION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_SOURCE_WHEEL_TILT_SINCE_VERSION 6
     * }
     */
    public static int WL_POINTER_AXIS_SOURCE_WHEEL_TILT_SINCE_VERSION() {
        return WL_POINTER_AXIS_SOURCE_WHEEL_TILT_SINCE_VERSION;
    }
    private static final int WL_POINTER_ENTER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_ENTER 0
     * }
     */
    public static int WL_POINTER_ENTER() {
        return WL_POINTER_ENTER;
    }
    private static final int WL_POINTER_LEAVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_LEAVE 1
     * }
     */
    public static int WL_POINTER_LEAVE() {
        return WL_POINTER_LEAVE;
    }
    private static final int WL_POINTER_MOTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_MOTION 2
     * }
     */
    public static int WL_POINTER_MOTION() {
        return WL_POINTER_MOTION;
    }
    private static final int WL_POINTER_BUTTON = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_BUTTON 3
     * }
     */
    public static int WL_POINTER_BUTTON() {
        return WL_POINTER_BUTTON;
    }
    private static final int WL_POINTER_AXIS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS 4
     * }
     */
    public static int WL_POINTER_AXIS() {
        return WL_POINTER_AXIS;
    }
    private static final int WL_POINTER_FRAME = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_FRAME 5
     * }
     */
    public static int WL_POINTER_FRAME() {
        return WL_POINTER_FRAME;
    }
    private static final int WL_POINTER_AXIS_SOURCE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_SOURCE 6
     * }
     */
    public static int WL_POINTER_AXIS_SOURCE() {
        return WL_POINTER_AXIS_SOURCE;
    }
    private static final int WL_POINTER_AXIS_STOP = (int)7L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_STOP 7
     * }
     */
    public static int WL_POINTER_AXIS_STOP() {
        return WL_POINTER_AXIS_STOP;
    }
    private static final int WL_POINTER_AXIS_DISCRETE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_DISCRETE 8
     * }
     */
    public static int WL_POINTER_AXIS_DISCRETE() {
        return WL_POINTER_AXIS_DISCRETE;
    }
    private static final int WL_POINTER_AXIS_VALUE120 = (int)9L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_VALUE120 9
     * }
     */
    public static int WL_POINTER_AXIS_VALUE120() {
        return WL_POINTER_AXIS_VALUE120;
    }
    private static final int WL_POINTER_AXIS_RELATIVE_DIRECTION = (int)10L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_RELATIVE_DIRECTION 10
     * }
     */
    public static int WL_POINTER_AXIS_RELATIVE_DIRECTION() {
        return WL_POINTER_AXIS_RELATIVE_DIRECTION;
    }
    private static final int WL_POINTER_ENTER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_ENTER_SINCE_VERSION 1
     * }
     */
    public static int WL_POINTER_ENTER_SINCE_VERSION() {
        return WL_POINTER_ENTER_SINCE_VERSION;
    }
    private static final int WL_POINTER_LEAVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_LEAVE_SINCE_VERSION 1
     * }
     */
    public static int WL_POINTER_LEAVE_SINCE_VERSION() {
        return WL_POINTER_LEAVE_SINCE_VERSION;
    }
    private static final int WL_POINTER_MOTION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_MOTION_SINCE_VERSION 1
     * }
     */
    public static int WL_POINTER_MOTION_SINCE_VERSION() {
        return WL_POINTER_MOTION_SINCE_VERSION;
    }
    private static final int WL_POINTER_BUTTON_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_BUTTON_SINCE_VERSION 1
     * }
     */
    public static int WL_POINTER_BUTTON_SINCE_VERSION() {
        return WL_POINTER_BUTTON_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_SINCE_VERSION 1
     * }
     */
    public static int WL_POINTER_AXIS_SINCE_VERSION() {
        return WL_POINTER_AXIS_SINCE_VERSION;
    }
    private static final int WL_POINTER_FRAME_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_FRAME_SINCE_VERSION 5
     * }
     */
    public static int WL_POINTER_FRAME_SINCE_VERSION() {
        return WL_POINTER_FRAME_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_SOURCE_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_SOURCE_SINCE_VERSION 5
     * }
     */
    public static int WL_POINTER_AXIS_SOURCE_SINCE_VERSION() {
        return WL_POINTER_AXIS_SOURCE_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_STOP_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_STOP_SINCE_VERSION 5
     * }
     */
    public static int WL_POINTER_AXIS_STOP_SINCE_VERSION() {
        return WL_POINTER_AXIS_STOP_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_DISCRETE_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_DISCRETE_SINCE_VERSION 5
     * }
     */
    public static int WL_POINTER_AXIS_DISCRETE_SINCE_VERSION() {
        return WL_POINTER_AXIS_DISCRETE_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_VALUE120_SINCE_VERSION = (int)8L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_VALUE120_SINCE_VERSION 8
     * }
     */
    public static int WL_POINTER_AXIS_VALUE120_SINCE_VERSION() {
        return WL_POINTER_AXIS_VALUE120_SINCE_VERSION;
    }
    private static final int WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION = (int)9L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION 9
     * }
     */
    public static int WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION() {
        return WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION;
    }
    private static final int WL_POINTER_SET_CURSOR_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_SET_CURSOR_SINCE_VERSION 1
     * }
     */
    public static int WL_POINTER_SET_CURSOR_SINCE_VERSION() {
        return WL_POINTER_SET_CURSOR_SINCE_VERSION;
    }
    private static final int WL_POINTER_RELEASE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_POINTER_RELEASE_SINCE_VERSION 3
     * }
     */
    public static int WL_POINTER_RELEASE_SINCE_VERSION() {
        return WL_POINTER_RELEASE_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_KEYMAP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_KEYMAP 0
     * }
     */
    public static int WL_KEYBOARD_KEYMAP() {
        return WL_KEYBOARD_KEYMAP;
    }
    private static final int WL_KEYBOARD_ENTER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_ENTER 1
     * }
     */
    public static int WL_KEYBOARD_ENTER() {
        return WL_KEYBOARD_ENTER;
    }
    private static final int WL_KEYBOARD_LEAVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_LEAVE 2
     * }
     */
    public static int WL_KEYBOARD_LEAVE() {
        return WL_KEYBOARD_LEAVE;
    }
    private static final int WL_KEYBOARD_KEY = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_KEY 3
     * }
     */
    public static int WL_KEYBOARD_KEY() {
        return WL_KEYBOARD_KEY;
    }
    private static final int WL_KEYBOARD_MODIFIERS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_MODIFIERS 4
     * }
     */
    public static int WL_KEYBOARD_MODIFIERS() {
        return WL_KEYBOARD_MODIFIERS;
    }
    private static final int WL_KEYBOARD_REPEAT_INFO = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_REPEAT_INFO 5
     * }
     */
    public static int WL_KEYBOARD_REPEAT_INFO() {
        return WL_KEYBOARD_REPEAT_INFO;
    }
    private static final int WL_KEYBOARD_KEYMAP_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_KEYMAP_SINCE_VERSION 1
     * }
     */
    public static int WL_KEYBOARD_KEYMAP_SINCE_VERSION() {
        return WL_KEYBOARD_KEYMAP_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_ENTER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_ENTER_SINCE_VERSION 1
     * }
     */
    public static int WL_KEYBOARD_ENTER_SINCE_VERSION() {
        return WL_KEYBOARD_ENTER_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_LEAVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_LEAVE_SINCE_VERSION 1
     * }
     */
    public static int WL_KEYBOARD_LEAVE_SINCE_VERSION() {
        return WL_KEYBOARD_LEAVE_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_KEY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_KEY_SINCE_VERSION 1
     * }
     */
    public static int WL_KEYBOARD_KEY_SINCE_VERSION() {
        return WL_KEYBOARD_KEY_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_MODIFIERS_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_MODIFIERS_SINCE_VERSION 1
     * }
     */
    public static int WL_KEYBOARD_MODIFIERS_SINCE_VERSION() {
        return WL_KEYBOARD_MODIFIERS_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION 4
     * }
     */
    public static int WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION() {
        return WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION;
    }
    private static final int WL_KEYBOARD_RELEASE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_KEYBOARD_RELEASE_SINCE_VERSION 3
     * }
     */
    public static int WL_KEYBOARD_RELEASE_SINCE_VERSION() {
        return WL_KEYBOARD_RELEASE_SINCE_VERSION;
    }
    private static final int WL_TOUCH_DOWN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_DOWN 0
     * }
     */
    public static int WL_TOUCH_DOWN() {
        return WL_TOUCH_DOWN;
    }
    private static final int WL_TOUCH_UP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_UP 1
     * }
     */
    public static int WL_TOUCH_UP() {
        return WL_TOUCH_UP;
    }
    private static final int WL_TOUCH_MOTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_MOTION 2
     * }
     */
    public static int WL_TOUCH_MOTION() {
        return WL_TOUCH_MOTION;
    }
    private static final int WL_TOUCH_FRAME = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_FRAME 3
     * }
     */
    public static int WL_TOUCH_FRAME() {
        return WL_TOUCH_FRAME;
    }
    private static final int WL_TOUCH_CANCEL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_CANCEL 4
     * }
     */
    public static int WL_TOUCH_CANCEL() {
        return WL_TOUCH_CANCEL;
    }
    private static final int WL_TOUCH_SHAPE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_SHAPE 5
     * }
     */
    public static int WL_TOUCH_SHAPE() {
        return WL_TOUCH_SHAPE;
    }
    private static final int WL_TOUCH_ORIENTATION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_ORIENTATION 6
     * }
     */
    public static int WL_TOUCH_ORIENTATION() {
        return WL_TOUCH_ORIENTATION;
    }
    private static final int WL_TOUCH_DOWN_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_DOWN_SINCE_VERSION 1
     * }
     */
    public static int WL_TOUCH_DOWN_SINCE_VERSION() {
        return WL_TOUCH_DOWN_SINCE_VERSION;
    }
    private static final int WL_TOUCH_UP_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_UP_SINCE_VERSION 1
     * }
     */
    public static int WL_TOUCH_UP_SINCE_VERSION() {
        return WL_TOUCH_UP_SINCE_VERSION;
    }
    private static final int WL_TOUCH_MOTION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_MOTION_SINCE_VERSION 1
     * }
     */
    public static int WL_TOUCH_MOTION_SINCE_VERSION() {
        return WL_TOUCH_MOTION_SINCE_VERSION;
    }
    private static final int WL_TOUCH_FRAME_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_FRAME_SINCE_VERSION 1
     * }
     */
    public static int WL_TOUCH_FRAME_SINCE_VERSION() {
        return WL_TOUCH_FRAME_SINCE_VERSION;
    }
    private static final int WL_TOUCH_CANCEL_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_CANCEL_SINCE_VERSION 1
     * }
     */
    public static int WL_TOUCH_CANCEL_SINCE_VERSION() {
        return WL_TOUCH_CANCEL_SINCE_VERSION;
    }
    private static final int WL_TOUCH_SHAPE_SINCE_VERSION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_SHAPE_SINCE_VERSION 6
     * }
     */
    public static int WL_TOUCH_SHAPE_SINCE_VERSION() {
        return WL_TOUCH_SHAPE_SINCE_VERSION;
    }
    private static final int WL_TOUCH_ORIENTATION_SINCE_VERSION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_ORIENTATION_SINCE_VERSION 6
     * }
     */
    public static int WL_TOUCH_ORIENTATION_SINCE_VERSION() {
        return WL_TOUCH_ORIENTATION_SINCE_VERSION;
    }
    private static final int WL_TOUCH_RELEASE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_TOUCH_RELEASE_SINCE_VERSION 3
     * }
     */
    public static int WL_TOUCH_RELEASE_SINCE_VERSION() {
        return WL_TOUCH_RELEASE_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_GEOMETRY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_GEOMETRY 0
     * }
     */
    public static int WL_OUTPUT_GEOMETRY() {
        return WL_OUTPUT_GEOMETRY;
    }
    private static final int WL_OUTPUT_MODE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_MODE 1
     * }
     */
    public static int WL_OUTPUT_MODE() {
        return WL_OUTPUT_MODE;
    }
    private static final int WL_OUTPUT_DONE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_DONE 2
     * }
     */
    public static int WL_OUTPUT_DONE() {
        return WL_OUTPUT_DONE;
    }
    private static final int WL_OUTPUT_SCALE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_SCALE 3
     * }
     */
    public static int WL_OUTPUT_SCALE() {
        return WL_OUTPUT_SCALE;
    }
    private static final int WL_OUTPUT_NAME = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_NAME 4
     * }
     */
    public static int WL_OUTPUT_NAME() {
        return WL_OUTPUT_NAME;
    }
    private static final int WL_OUTPUT_DESCRIPTION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_DESCRIPTION 5
     * }
     */
    public static int WL_OUTPUT_DESCRIPTION() {
        return WL_OUTPUT_DESCRIPTION;
    }
    private static final int WL_OUTPUT_GEOMETRY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_GEOMETRY_SINCE_VERSION 1
     * }
     */
    public static int WL_OUTPUT_GEOMETRY_SINCE_VERSION() {
        return WL_OUTPUT_GEOMETRY_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_MODE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_MODE_SINCE_VERSION 1
     * }
     */
    public static int WL_OUTPUT_MODE_SINCE_VERSION() {
        return WL_OUTPUT_MODE_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_DONE_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_DONE_SINCE_VERSION 2
     * }
     */
    public static int WL_OUTPUT_DONE_SINCE_VERSION() {
        return WL_OUTPUT_DONE_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_SCALE_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_SCALE_SINCE_VERSION 2
     * }
     */
    public static int WL_OUTPUT_SCALE_SINCE_VERSION() {
        return WL_OUTPUT_SCALE_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_NAME_SINCE_VERSION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_NAME_SINCE_VERSION 4
     * }
     */
    public static int WL_OUTPUT_NAME_SINCE_VERSION() {
        return WL_OUTPUT_NAME_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_DESCRIPTION_SINCE_VERSION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_DESCRIPTION_SINCE_VERSION 4
     * }
     */
    public static int WL_OUTPUT_DESCRIPTION_SINCE_VERSION() {
        return WL_OUTPUT_DESCRIPTION_SINCE_VERSION;
    }
    private static final int WL_OUTPUT_RELEASE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WL_OUTPUT_RELEASE_SINCE_VERSION 3
     * }
     */
    public static int WL_OUTPUT_RELEASE_SINCE_VERSION() {
        return WL_OUTPUT_RELEASE_SINCE_VERSION;
    }
    private static final int WL_REGION_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGION_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_REGION_DESTROY_SINCE_VERSION() {
        return WL_REGION_DESTROY_SINCE_VERSION;
    }
    private static final int WL_REGION_ADD_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGION_ADD_SINCE_VERSION 1
     * }
     */
    public static int WL_REGION_ADD_SINCE_VERSION() {
        return WL_REGION_ADD_SINCE_VERSION;
    }
    private static final int WL_REGION_SUBTRACT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_REGION_SUBTRACT_SINCE_VERSION 1
     * }
     */
    public static int WL_REGION_SUBTRACT_SINCE_VERSION() {
        return WL_REGION_SUBTRACT_SINCE_VERSION;
    }
    private static final int WL_SUBCOMPOSITOR_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBCOMPOSITOR_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBCOMPOSITOR_DESTROY_SINCE_VERSION() {
        return WL_SUBCOMPOSITOR_DESTROY_SINCE_VERSION;
    }
    private static final int WL_SUBCOMPOSITOR_GET_SUBSURFACE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBCOMPOSITOR_GET_SUBSURFACE_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBCOMPOSITOR_GET_SUBSURFACE_SINCE_VERSION() {
        return WL_SUBCOMPOSITOR_GET_SUBSURFACE_SINCE_VERSION;
    }
    private static final int WL_SUBSURFACE_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBSURFACE_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBSURFACE_DESTROY_SINCE_VERSION() {
        return WL_SUBSURFACE_DESTROY_SINCE_VERSION;
    }
    private static final int WL_SUBSURFACE_SET_POSITION_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBSURFACE_SET_POSITION_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBSURFACE_SET_POSITION_SINCE_VERSION() {
        return WL_SUBSURFACE_SET_POSITION_SINCE_VERSION;
    }
    private static final int WL_SUBSURFACE_PLACE_ABOVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBSURFACE_PLACE_ABOVE_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBSURFACE_PLACE_ABOVE_SINCE_VERSION() {
        return WL_SUBSURFACE_PLACE_ABOVE_SINCE_VERSION;
    }
    private static final int WL_SUBSURFACE_PLACE_BELOW_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBSURFACE_PLACE_BELOW_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBSURFACE_PLACE_BELOW_SINCE_VERSION() {
        return WL_SUBSURFACE_PLACE_BELOW_SINCE_VERSION;
    }
    private static final int WL_SUBSURFACE_SET_SYNC_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBSURFACE_SET_SYNC_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBSURFACE_SET_SYNC_SINCE_VERSION() {
        return WL_SUBSURFACE_SET_SYNC_SINCE_VERSION;
    }
    private static final int WL_SUBSURFACE_SET_DESYNC_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WL_SUBSURFACE_SET_DESYNC_SINCE_VERSION 1
     * }
     */
    public static int WL_SUBSURFACE_SET_DESYNC_SINCE_VERSION() {
        return WL_SUBSURFACE_SET_DESYNC_SINCE_VERSION;
    }
    private static final int XDG_WM_BASE_PING = (int)0L;
    /**
     * {@snippet lang=c :
     * #define XDG_WM_BASE_PING 0
     * }
     */
    public static int XDG_WM_BASE_PING() {
        return XDG_WM_BASE_PING;
    }
    private static final int XDG_WM_BASE_PING_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_WM_BASE_PING_SINCE_VERSION 1
     * }
     */
    public static int XDG_WM_BASE_PING_SINCE_VERSION() {
        return XDG_WM_BASE_PING_SINCE_VERSION;
    }
    private static final int XDG_WM_BASE_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_WM_BASE_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int XDG_WM_BASE_DESTROY_SINCE_VERSION() {
        return XDG_WM_BASE_DESTROY_SINCE_VERSION;
    }
    private static final int XDG_WM_BASE_CREATE_POSITIONER_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_WM_BASE_CREATE_POSITIONER_SINCE_VERSION 1
     * }
     */
    public static int XDG_WM_BASE_CREATE_POSITIONER_SINCE_VERSION() {
        return XDG_WM_BASE_CREATE_POSITIONER_SINCE_VERSION;
    }
    private static final int XDG_WM_BASE_GET_XDG_SURFACE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_WM_BASE_GET_XDG_SURFACE_SINCE_VERSION 1
     * }
     */
    public static int XDG_WM_BASE_GET_XDG_SURFACE_SINCE_VERSION() {
        return XDG_WM_BASE_GET_XDG_SURFACE_SINCE_VERSION;
    }
    private static final int XDG_WM_BASE_PONG_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_WM_BASE_PONG_SINCE_VERSION 1
     * }
     */
    public static int XDG_WM_BASE_PONG_SINCE_VERSION() {
        return XDG_WM_BASE_PONG_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_DESTROY_SINCE_VERSION() {
        return XDG_POSITIONER_DESTROY_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_SIZE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_SIZE_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_SET_SIZE_SINCE_VERSION() {
        return XDG_POSITIONER_SET_SIZE_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_ANCHOR_RECT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_ANCHOR_RECT_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_SET_ANCHOR_RECT_SINCE_VERSION() {
        return XDG_POSITIONER_SET_ANCHOR_RECT_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_ANCHOR_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_ANCHOR_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_SET_ANCHOR_SINCE_VERSION() {
        return XDG_POSITIONER_SET_ANCHOR_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_GRAVITY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_GRAVITY_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_SET_GRAVITY_SINCE_VERSION() {
        return XDG_POSITIONER_SET_GRAVITY_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT_SINCE_VERSION() {
        return XDG_POSITIONER_SET_CONSTRAINT_ADJUSTMENT_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_OFFSET_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_OFFSET_SINCE_VERSION 1
     * }
     */
    public static int XDG_POSITIONER_SET_OFFSET_SINCE_VERSION() {
        return XDG_POSITIONER_SET_OFFSET_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_REACTIVE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_REACTIVE_SINCE_VERSION 3
     * }
     */
    public static int XDG_POSITIONER_SET_REACTIVE_SINCE_VERSION() {
        return XDG_POSITIONER_SET_REACTIVE_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_PARENT_SIZE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_PARENT_SIZE_SINCE_VERSION 3
     * }
     */
    public static int XDG_POSITIONER_SET_PARENT_SIZE_SINCE_VERSION() {
        return XDG_POSITIONER_SET_PARENT_SIZE_SINCE_VERSION;
    }
    private static final int XDG_POSITIONER_SET_PARENT_CONFIGURE_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XDG_POSITIONER_SET_PARENT_CONFIGURE_SINCE_VERSION 3
     * }
     */
    public static int XDG_POSITIONER_SET_PARENT_CONFIGURE_SINCE_VERSION() {
        return XDG_POSITIONER_SET_PARENT_CONFIGURE_SINCE_VERSION;
    }
    private static final int XDG_SURFACE_CONFIGURE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_CONFIGURE 0
     * }
     */
    public static int XDG_SURFACE_CONFIGURE() {
        return XDG_SURFACE_CONFIGURE;
    }
    private static final int XDG_SURFACE_CONFIGURE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_CONFIGURE_SINCE_VERSION 1
     * }
     */
    public static int XDG_SURFACE_CONFIGURE_SINCE_VERSION() {
        return XDG_SURFACE_CONFIGURE_SINCE_VERSION;
    }
    private static final int XDG_SURFACE_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int XDG_SURFACE_DESTROY_SINCE_VERSION() {
        return XDG_SURFACE_DESTROY_SINCE_VERSION;
    }
    private static final int XDG_SURFACE_GET_TOPLEVEL_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_GET_TOPLEVEL_SINCE_VERSION 1
     * }
     */
    public static int XDG_SURFACE_GET_TOPLEVEL_SINCE_VERSION() {
        return XDG_SURFACE_GET_TOPLEVEL_SINCE_VERSION;
    }
    private static final int XDG_SURFACE_GET_POPUP_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_GET_POPUP_SINCE_VERSION 1
     * }
     */
    public static int XDG_SURFACE_GET_POPUP_SINCE_VERSION() {
        return XDG_SURFACE_GET_POPUP_SINCE_VERSION;
    }
    private static final int XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE_VERSION 1
     * }
     */
    public static int XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE_VERSION() {
        return XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE_VERSION;
    }
    private static final int XDG_SURFACE_ACK_CONFIGURE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_SURFACE_ACK_CONFIGURE_SINCE_VERSION 1
     * }
     */
    public static int XDG_SURFACE_ACK_CONFIGURE_SINCE_VERSION() {
        return XDG_SURFACE_ACK_CONFIGURE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_STATE_TILED_LEFT_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_STATE_TILED_LEFT_SINCE_VERSION 2
     * }
     */
    public static int XDG_TOPLEVEL_STATE_TILED_LEFT_SINCE_VERSION() {
        return XDG_TOPLEVEL_STATE_TILED_LEFT_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_STATE_TILED_RIGHT_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_STATE_TILED_RIGHT_SINCE_VERSION 2
     * }
     */
    public static int XDG_TOPLEVEL_STATE_TILED_RIGHT_SINCE_VERSION() {
        return XDG_TOPLEVEL_STATE_TILED_RIGHT_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_STATE_TILED_TOP_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_STATE_TILED_TOP_SINCE_VERSION 2
     * }
     */
    public static int XDG_TOPLEVEL_STATE_TILED_TOP_SINCE_VERSION() {
        return XDG_TOPLEVEL_STATE_TILED_TOP_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_STATE_TILED_BOTTOM_SINCE_VERSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_STATE_TILED_BOTTOM_SINCE_VERSION 2
     * }
     */
    public static int XDG_TOPLEVEL_STATE_TILED_BOTTOM_SINCE_VERSION() {
        return XDG_TOPLEVEL_STATE_TILED_BOTTOM_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_STATE_SUSPENDED_SINCE_VERSION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_STATE_SUSPENDED_SINCE_VERSION 6
     * }
     */
    public static int XDG_TOPLEVEL_STATE_SUSPENDED_SINCE_VERSION() {
        return XDG_TOPLEVEL_STATE_SUSPENDED_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_CONFIGURE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_CONFIGURE 0
     * }
     */
    public static int XDG_TOPLEVEL_CONFIGURE() {
        return XDG_TOPLEVEL_CONFIGURE;
    }
    private static final int XDG_TOPLEVEL_CLOSE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_CLOSE 1
     * }
     */
    public static int XDG_TOPLEVEL_CLOSE() {
        return XDG_TOPLEVEL_CLOSE;
    }
    private static final int XDG_TOPLEVEL_CONFIGURE_BOUNDS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_CONFIGURE_BOUNDS 2
     * }
     */
    public static int XDG_TOPLEVEL_CONFIGURE_BOUNDS() {
        return XDG_TOPLEVEL_CONFIGURE_BOUNDS;
    }
    private static final int XDG_TOPLEVEL_WM_CAPABILITIES = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_WM_CAPABILITIES 3
     * }
     */
    public static int XDG_TOPLEVEL_WM_CAPABILITIES() {
        return XDG_TOPLEVEL_WM_CAPABILITIES;
    }
    private static final int XDG_TOPLEVEL_CONFIGURE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_CONFIGURE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_CONFIGURE_SINCE_VERSION() {
        return XDG_TOPLEVEL_CONFIGURE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_CLOSE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_CLOSE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_CLOSE_SINCE_VERSION() {
        return XDG_TOPLEVEL_CLOSE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION 4
     * }
     */
    public static int XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION() {
        return XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION 5
     * }
     */
    public static int XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION() {
        return XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_DESTROY_SINCE_VERSION() {
        return XDG_TOPLEVEL_DESTROY_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_PARENT_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_PARENT_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_PARENT_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_PARENT_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_TITLE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_TITLE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_TITLE_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_TITLE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_APP_ID_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_APP_ID_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_APP_ID_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_APP_ID_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SHOW_WINDOW_MENU_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SHOW_WINDOW_MENU_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SHOW_WINDOW_MENU_SINCE_VERSION() {
        return XDG_TOPLEVEL_SHOW_WINDOW_MENU_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_MOVE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_MOVE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_MOVE_SINCE_VERSION() {
        return XDG_TOPLEVEL_MOVE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_RESIZE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_RESIZE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_RESIZE_SINCE_VERSION() {
        return XDG_TOPLEVEL_RESIZE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_MAX_SIZE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_MAX_SIZE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_MAX_SIZE_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_MAX_SIZE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_MIN_SIZE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_MIN_SIZE_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_MIN_SIZE_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_MIN_SIZE_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_MAXIMIZED_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_MAXIMIZED_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_MAXIMIZED_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_MAXIMIZED_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_UNSET_MAXIMIZED_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_UNSET_MAXIMIZED_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_UNSET_MAXIMIZED_SINCE_VERSION() {
        return XDG_TOPLEVEL_UNSET_MAXIMIZED_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_FULLSCREEN_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_FULLSCREEN_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_FULLSCREEN_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_FULLSCREEN_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_UNSET_FULLSCREEN_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_UNSET_FULLSCREEN_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_UNSET_FULLSCREEN_SINCE_VERSION() {
        return XDG_TOPLEVEL_UNSET_FULLSCREEN_SINCE_VERSION;
    }
    private static final int XDG_TOPLEVEL_SET_MINIMIZED_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_TOPLEVEL_SET_MINIMIZED_SINCE_VERSION 1
     * }
     */
    public static int XDG_TOPLEVEL_SET_MINIMIZED_SINCE_VERSION() {
        return XDG_TOPLEVEL_SET_MINIMIZED_SINCE_VERSION;
    }
    private static final int XDG_POPUP_CONFIGURE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_CONFIGURE 0
     * }
     */
    public static int XDG_POPUP_CONFIGURE() {
        return XDG_POPUP_CONFIGURE;
    }
    private static final int XDG_POPUP_POPUP_DONE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_POPUP_DONE 1
     * }
     */
    public static int XDG_POPUP_POPUP_DONE() {
        return XDG_POPUP_POPUP_DONE;
    }
    private static final int XDG_POPUP_REPOSITIONED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_REPOSITIONED 2
     * }
     */
    public static int XDG_POPUP_REPOSITIONED() {
        return XDG_POPUP_REPOSITIONED;
    }
    private static final int XDG_POPUP_CONFIGURE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_CONFIGURE_SINCE_VERSION 1
     * }
     */
    public static int XDG_POPUP_CONFIGURE_SINCE_VERSION() {
        return XDG_POPUP_CONFIGURE_SINCE_VERSION;
    }
    private static final int XDG_POPUP_POPUP_DONE_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_POPUP_DONE_SINCE_VERSION 1
     * }
     */
    public static int XDG_POPUP_POPUP_DONE_SINCE_VERSION() {
        return XDG_POPUP_POPUP_DONE_SINCE_VERSION;
    }
    private static final int XDG_POPUP_REPOSITIONED_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_REPOSITIONED_SINCE_VERSION 3
     * }
     */
    public static int XDG_POPUP_REPOSITIONED_SINCE_VERSION() {
        return XDG_POPUP_REPOSITIONED_SINCE_VERSION;
    }
    private static final int XDG_POPUP_DESTROY_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_DESTROY_SINCE_VERSION 1
     * }
     */
    public static int XDG_POPUP_DESTROY_SINCE_VERSION() {
        return XDG_POPUP_DESTROY_SINCE_VERSION;
    }
    private static final int XDG_POPUP_GRAB_SINCE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_GRAB_SINCE_VERSION 1
     * }
     */
    public static int XDG_POPUP_GRAB_SINCE_VERSION() {
        return XDG_POPUP_GRAB_SINCE_VERSION;
    }
    private static final int XDG_POPUP_REPOSITION_SINCE_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define XDG_POPUP_REPOSITION_SINCE_VERSION 3
     * }
     */
    public static int XDG_POPUP_REPOSITION_SINCE_VERSION() {
        return XDG_POPUP_REPOSITION_SINCE_VERSION;
    }
    private static final int PIXMAN_VERSION_MAJOR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_VERSION_MAJOR 0
     * }
     */
    public static int PIXMAN_VERSION_MAJOR() {
        return PIXMAN_VERSION_MAJOR;
    }
    private static final int PIXMAN_VERSION_MINOR = (int)43L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_VERSION_MINOR 43
     * }
     */
    public static int PIXMAN_VERSION_MINOR() {
        return PIXMAN_VERSION_MINOR;
    }
    private static final int PIXMAN_VERSION_MICRO = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_VERSION_MICRO 4
     * }
     */
    public static int PIXMAN_VERSION_MICRO() {
        return PIXMAN_VERSION_MICRO;
    }
    private static final int PIXMAN_MAX_INDEXED = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_MAX_INDEXED 256
     * }
     */
    public static int PIXMAN_MAX_INDEXED() {
        return PIXMAN_MAX_INDEXED;
    }
    private static final int PIXMAN_TYPE_OTHER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_OTHER 0
     * }
     */
    public static int PIXMAN_TYPE_OTHER() {
        return PIXMAN_TYPE_OTHER;
    }
    private static final int PIXMAN_TYPE_A = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_A 1
     * }
     */
    public static int PIXMAN_TYPE_A() {
        return PIXMAN_TYPE_A;
    }
    private static final int PIXMAN_TYPE_ARGB = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_ARGB 2
     * }
     */
    public static int PIXMAN_TYPE_ARGB() {
        return PIXMAN_TYPE_ARGB;
    }
    private static final int PIXMAN_TYPE_ABGR = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_ABGR 3
     * }
     */
    public static int PIXMAN_TYPE_ABGR() {
        return PIXMAN_TYPE_ABGR;
    }
    private static final int PIXMAN_TYPE_COLOR = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_COLOR 4
     * }
     */
    public static int PIXMAN_TYPE_COLOR() {
        return PIXMAN_TYPE_COLOR;
    }
    private static final int PIXMAN_TYPE_GRAY = (int)5L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_GRAY 5
     * }
     */
    public static int PIXMAN_TYPE_GRAY() {
        return PIXMAN_TYPE_GRAY;
    }
    private static final int PIXMAN_TYPE_YUY2 = (int)6L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_YUY2 6
     * }
     */
    public static int PIXMAN_TYPE_YUY2() {
        return PIXMAN_TYPE_YUY2;
    }
    private static final int PIXMAN_TYPE_YV12 = (int)7L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_YV12 7
     * }
     */
    public static int PIXMAN_TYPE_YV12() {
        return PIXMAN_TYPE_YV12;
    }
    private static final int PIXMAN_TYPE_BGRA = (int)8L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_BGRA 8
     * }
     */
    public static int PIXMAN_TYPE_BGRA() {
        return PIXMAN_TYPE_BGRA;
    }
    private static final int PIXMAN_TYPE_RGBA = (int)9L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_RGBA 9
     * }
     */
    public static int PIXMAN_TYPE_RGBA() {
        return PIXMAN_TYPE_RGBA;
    }
    private static final int PIXMAN_TYPE_ARGB_SRGB = (int)10L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_ARGB_SRGB 10
     * }
     */
    public static int PIXMAN_TYPE_ARGB_SRGB() {
        return PIXMAN_TYPE_ARGB_SRGB;
    }
    private static final int PIXMAN_TYPE_RGBA_FLOAT = (int)11L;
    /**
     * {@snippet lang=c :
     * #define PIXMAN_TYPE_RGBA_FLOAT 11
     * }
     */
    public static int PIXMAN_TYPE_RGBA_FLOAT() {
        return PIXMAN_TYPE_RGBA_FLOAT;
    }
    private static final int WLR_DMABUF_MAX_PLANES = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WLR_DMABUF_MAX_PLANES 4
     * }
     */
    public static int WLR_DMABUF_MAX_PLANES() {
        return WLR_DMABUF_MAX_PLANES;
    }
    private static final int _TIME_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _TIME_H 1
     * }
     */
    public static int _TIME_H() {
        return _TIME_H;
    }
    private static final int _BITS_TIME_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_TIME_H 1
     * }
     */
    public static int _BITS_TIME_H() {
        return _BITS_TIME_H;
    }
    private static final int CLOCK_REALTIME = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_REALTIME 0
     * }
     */
    public static int CLOCK_REALTIME() {
        return CLOCK_REALTIME;
    }
    private static final int CLOCK_MONOTONIC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_MONOTONIC 1
     * }
     */
    public static int CLOCK_MONOTONIC() {
        return CLOCK_MONOTONIC;
    }
    private static final int CLOCK_PROCESS_CPUTIME_ID = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_PROCESS_CPUTIME_ID 2
     * }
     */
    public static int CLOCK_PROCESS_CPUTIME_ID() {
        return CLOCK_PROCESS_CPUTIME_ID;
    }
    private static final int CLOCK_THREAD_CPUTIME_ID = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_THREAD_CPUTIME_ID 3
     * }
     */
    public static int CLOCK_THREAD_CPUTIME_ID() {
        return CLOCK_THREAD_CPUTIME_ID;
    }
    private static final int CLOCK_MONOTONIC_RAW = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_MONOTONIC_RAW 4
     * }
     */
    public static int CLOCK_MONOTONIC_RAW() {
        return CLOCK_MONOTONIC_RAW;
    }
    private static final int CLOCK_REALTIME_COARSE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_REALTIME_COARSE 5
     * }
     */
    public static int CLOCK_REALTIME_COARSE() {
        return CLOCK_REALTIME_COARSE;
    }
    private static final int CLOCK_MONOTONIC_COARSE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_MONOTONIC_COARSE 6
     * }
     */
    public static int CLOCK_MONOTONIC_COARSE() {
        return CLOCK_MONOTONIC_COARSE;
    }
    private static final int CLOCK_BOOTTIME = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_BOOTTIME 7
     * }
     */
    public static int CLOCK_BOOTTIME() {
        return CLOCK_BOOTTIME;
    }
    private static final int CLOCK_REALTIME_ALARM = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_REALTIME_ALARM 8
     * }
     */
    public static int CLOCK_REALTIME_ALARM() {
        return CLOCK_REALTIME_ALARM;
    }
    private static final int CLOCK_BOOTTIME_ALARM = (int)9L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_BOOTTIME_ALARM 9
     * }
     */
    public static int CLOCK_BOOTTIME_ALARM() {
        return CLOCK_BOOTTIME_ALARM;
    }
    private static final int CLOCK_TAI = (int)11L;
    /**
     * {@snippet lang=c :
     * #define CLOCK_TAI 11
     * }
     */
    public static int CLOCK_TAI() {
        return CLOCK_TAI;
    }
    private static final int TIMER_ABSTIME = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TIMER_ABSTIME 1
     * }
     */
    public static int TIMER_ABSTIME() {
        return TIMER_ABSTIME;
    }
    private static final int __struct_tm_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __struct_tm_defined 1
     * }
     */
    public static int __struct_tm_defined() {
        return __struct_tm_defined;
    }
    private static final int __itimerspec_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __itimerspec_defined 1
     * }
     */
    public static int __itimerspec_defined() {
        return __itimerspec_defined;
    }
    private static final int _BITS_TYPES_LOCALE_T_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_TYPES_LOCALE_T_H 1
     * }
     */
    public static int _BITS_TYPES_LOCALE_T_H() {
        return _BITS_TYPES_LOCALE_T_H;
    }
    private static final int _BITS_TYPES___LOCALE_T_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_TYPES___LOCALE_T_H 1
     * }
     */
    public static int _BITS_TYPES___LOCALE_T_H() {
        return _BITS_TYPES___LOCALE_T_H;
    }
    private static final int TIME_UTC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TIME_UTC 1
     * }
     */
    public static int TIME_UTC() {
        return TIME_UTC;
    }
    private static final int _STDIO_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _STDIO_H 1
     * }
     */
    public static int _STDIO_H() {
        return _STDIO_H;
    }
    private static final int _____fpos_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _____fpos_t_defined 1
     * }
     */
    public static int _____fpos_t_defined() {
        return _____fpos_t_defined;
    }
    private static final int ____mbstate_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ____mbstate_t_defined 1
     * }
     */
    public static int ____mbstate_t_defined() {
        return ____mbstate_t_defined;
    }
    private static final int _____fpos64_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _____fpos64_t_defined 1
     * }
     */
    public static int _____fpos64_t_defined() {
        return _____fpos64_t_defined;
    }
    private static final int ____FILE_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ____FILE_defined 1
     * }
     */
    public static int ____FILE_defined() {
        return ____FILE_defined;
    }
    private static final int __FILE_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __FILE_defined 1
     * }
     */
    public static int __FILE_defined() {
        return __FILE_defined;
    }
    private static final int __struct_FILE_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __struct_FILE_defined 1
     * }
     */
    public static int __struct_FILE_defined() {
        return __struct_FILE_defined;
    }
    private static final int _IO_EOF_SEEN = (int)16L;
    /**
     * {@snippet lang=c :
     * #define _IO_EOF_SEEN 16
     * }
     */
    public static int _IO_EOF_SEEN() {
        return _IO_EOF_SEEN;
    }
    private static final int _IO_ERR_SEEN = (int)32L;
    /**
     * {@snippet lang=c :
     * #define _IO_ERR_SEEN 32
     * }
     */
    public static int _IO_ERR_SEEN() {
        return _IO_ERR_SEEN;
    }
    private static final int _IO_USER_LOCK = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define _IO_USER_LOCK 32768
     * }
     */
    public static int _IO_USER_LOCK() {
        return _IO_USER_LOCK;
    }
    private static final int __cookie_io_functions_t_defined = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __cookie_io_functions_t_defined 1
     * }
     */
    public static int __cookie_io_functions_t_defined() {
        return __cookie_io_functions_t_defined;
    }
    private static final int _IOFBF = (int)0L;
    /**
     * {@snippet lang=c :
     * #define _IOFBF 0
     * }
     */
    public static int _IOFBF() {
        return _IOFBF;
    }
    private static final int _IOLBF = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _IOLBF 1
     * }
     */
    public static int _IOLBF() {
        return _IOLBF;
    }
    private static final int _IONBF = (int)2L;
    /**
     * {@snippet lang=c :
     * #define _IONBF 2
     * }
     */
    public static int _IONBF() {
        return _IONBF;
    }
    private static final int BUFSIZ = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define BUFSIZ 8192
     * }
     */
    public static int BUFSIZ() {
        return BUFSIZ;
    }
    private static final int SEEK_SET = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SEEK_SET 0
     * }
     */
    public static int SEEK_SET() {
        return SEEK_SET;
    }
    private static final int SEEK_CUR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SEEK_CUR 1
     * }
     */
    public static int SEEK_CUR() {
        return SEEK_CUR;
    }
    private static final int SEEK_END = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SEEK_END 2
     * }
     */
    public static int SEEK_END() {
        return SEEK_END;
    }
    private static final int L_tmpnam = (int)20L;
    /**
     * {@snippet lang=c :
     * #define L_tmpnam 20
     * }
     */
    public static int L_tmpnam() {
        return L_tmpnam;
    }
    private static final int TMP_MAX = (int)238328L;
    /**
     * {@snippet lang=c :
     * #define TMP_MAX 238328
     * }
     */
    public static int TMP_MAX() {
        return TMP_MAX;
    }
    private static final int _BITS_STDIO_LIM_H = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _BITS_STDIO_LIM_H 1
     * }
     */
    public static int _BITS_STDIO_LIM_H() {
        return _BITS_STDIO_LIM_H;
    }
    private static final int FILENAME_MAX = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define FILENAME_MAX 4096
     * }
     */
    public static int FILENAME_MAX() {
        return FILENAME_MAX;
    }
    private static final int L_ctermid = (int)9L;
    /**
     * {@snippet lang=c :
     * #define L_ctermid 9
     * }
     */
    public static int L_ctermid() {
        return L_ctermid;
    }
    private static final int FOPEN_MAX = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FOPEN_MAX 16
     * }
     */
    public static int FOPEN_MAX() {
        return FOPEN_MAX;
    }
    private static final int XKB_KEY_NoSymbol = (int)0L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_NoSymbol 0
     * }
     */
    public static int XKB_KEY_NoSymbol() {
        return XKB_KEY_NoSymbol;
    }
    private static final int XKB_KEY_VoidSymbol = (int)16777215L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_VoidSymbol 16777215
     * }
     */
    public static int XKB_KEY_VoidSymbol() {
        return XKB_KEY_VoidSymbol;
    }
    private static final int XKB_KEY_BackSpace = (int)65288L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_BackSpace 65288
     * }
     */
    public static int XKB_KEY_BackSpace() {
        return XKB_KEY_BackSpace;
    }
    private static final int XKB_KEY_Tab = (int)65289L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Tab 65289
     * }
     */
    public static int XKB_KEY_Tab() {
        return XKB_KEY_Tab;
    }
    private static final int XKB_KEY_Linefeed = (int)65290L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Linefeed 65290
     * }
     */
    public static int XKB_KEY_Linefeed() {
        return XKB_KEY_Linefeed;
    }
    private static final int XKB_KEY_Clear = (int)65291L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Clear 65291
     * }
     */
    public static int XKB_KEY_Clear() {
        return XKB_KEY_Clear;
    }
    private static final int XKB_KEY_Return = (int)65293L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Return 65293
     * }
     */
    public static int XKB_KEY_Return() {
        return XKB_KEY_Return;
    }
    private static final int XKB_KEY_Pause = (int)65299L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pause 65299
     * }
     */
    public static int XKB_KEY_Pause() {
        return XKB_KEY_Pause;
    }
    private static final int XKB_KEY_Scroll_Lock = (int)65300L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Scroll_Lock 65300
     * }
     */
    public static int XKB_KEY_Scroll_Lock() {
        return XKB_KEY_Scroll_Lock;
    }
    private static final int XKB_KEY_Sys_Req = (int)65301L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Sys_Req 65301
     * }
     */
    public static int XKB_KEY_Sys_Req() {
        return XKB_KEY_Sys_Req;
    }
    private static final int XKB_KEY_Escape = (int)65307L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Escape 65307
     * }
     */
    public static int XKB_KEY_Escape() {
        return XKB_KEY_Escape;
    }
    private static final int XKB_KEY_Delete = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Delete 65535
     * }
     */
    public static int XKB_KEY_Delete() {
        return XKB_KEY_Delete;
    }
    private static final int XKB_KEY_Multi_key = (int)65312L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Multi_key 65312
     * }
     */
    public static int XKB_KEY_Multi_key() {
        return XKB_KEY_Multi_key;
    }
    private static final int XKB_KEY_Codeinput = (int)65335L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Codeinput 65335
     * }
     */
    public static int XKB_KEY_Codeinput() {
        return XKB_KEY_Codeinput;
    }
    private static final int XKB_KEY_SingleCandidate = (int)65340L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_SingleCandidate 65340
     * }
     */
    public static int XKB_KEY_SingleCandidate() {
        return XKB_KEY_SingleCandidate;
    }
    private static final int XKB_KEY_MultipleCandidate = (int)65341L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_MultipleCandidate 65341
     * }
     */
    public static int XKB_KEY_MultipleCandidate() {
        return XKB_KEY_MultipleCandidate;
    }
    private static final int XKB_KEY_PreviousCandidate = (int)65342L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_PreviousCandidate 65342
     * }
     */
    public static int XKB_KEY_PreviousCandidate() {
        return XKB_KEY_PreviousCandidate;
    }
    private static final int XKB_KEY_Kanji = (int)65313L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Kanji 65313
     * }
     */
    public static int XKB_KEY_Kanji() {
        return XKB_KEY_Kanji;
    }
    private static final int XKB_KEY_Muhenkan = (int)65314L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Muhenkan 65314
     * }
     */
    public static int XKB_KEY_Muhenkan() {
        return XKB_KEY_Muhenkan;
    }
    private static final int XKB_KEY_Henkan_Mode = (int)65315L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Henkan_Mode 65315
     * }
     */
    public static int XKB_KEY_Henkan_Mode() {
        return XKB_KEY_Henkan_Mode;
    }
    private static final int XKB_KEY_Henkan = (int)65315L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Henkan 65315
     * }
     */
    public static int XKB_KEY_Henkan() {
        return XKB_KEY_Henkan;
    }
    private static final int XKB_KEY_Romaji = (int)65316L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Romaji 65316
     * }
     */
    public static int XKB_KEY_Romaji() {
        return XKB_KEY_Romaji;
    }
    private static final int XKB_KEY_Hiragana = (int)65317L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Hiragana 65317
     * }
     */
    public static int XKB_KEY_Hiragana() {
        return XKB_KEY_Hiragana;
    }
    private static final int XKB_KEY_Katakana = (int)65318L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Katakana 65318
     * }
     */
    public static int XKB_KEY_Katakana() {
        return XKB_KEY_Katakana;
    }
    private static final int XKB_KEY_Hiragana_Katakana = (int)65319L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Hiragana_Katakana 65319
     * }
     */
    public static int XKB_KEY_Hiragana_Katakana() {
        return XKB_KEY_Hiragana_Katakana;
    }
    private static final int XKB_KEY_Zenkaku = (int)65320L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Zenkaku 65320
     * }
     */
    public static int XKB_KEY_Zenkaku() {
        return XKB_KEY_Zenkaku;
    }
    private static final int XKB_KEY_Hankaku = (int)65321L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Hankaku 65321
     * }
     */
    public static int XKB_KEY_Hankaku() {
        return XKB_KEY_Hankaku;
    }
    private static final int XKB_KEY_Zenkaku_Hankaku = (int)65322L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Zenkaku_Hankaku 65322
     * }
     */
    public static int XKB_KEY_Zenkaku_Hankaku() {
        return XKB_KEY_Zenkaku_Hankaku;
    }
    private static final int XKB_KEY_Touroku = (int)65323L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Touroku 65323
     * }
     */
    public static int XKB_KEY_Touroku() {
        return XKB_KEY_Touroku;
    }
    private static final int XKB_KEY_Massyo = (int)65324L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Massyo 65324
     * }
     */
    public static int XKB_KEY_Massyo() {
        return XKB_KEY_Massyo;
    }
    private static final int XKB_KEY_Kana_Lock = (int)65325L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Kana_Lock 65325
     * }
     */
    public static int XKB_KEY_Kana_Lock() {
        return XKB_KEY_Kana_Lock;
    }
    private static final int XKB_KEY_Kana_Shift = (int)65326L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Kana_Shift 65326
     * }
     */
    public static int XKB_KEY_Kana_Shift() {
        return XKB_KEY_Kana_Shift;
    }
    private static final int XKB_KEY_Eisu_Shift = (int)65327L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Eisu_Shift 65327
     * }
     */
    public static int XKB_KEY_Eisu_Shift() {
        return XKB_KEY_Eisu_Shift;
    }
    private static final int XKB_KEY_Eisu_toggle = (int)65328L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Eisu_toggle 65328
     * }
     */
    public static int XKB_KEY_Eisu_toggle() {
        return XKB_KEY_Eisu_toggle;
    }
    private static final int XKB_KEY_Kanji_Bangou = (int)65335L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Kanji_Bangou 65335
     * }
     */
    public static int XKB_KEY_Kanji_Bangou() {
        return XKB_KEY_Kanji_Bangou;
    }
    private static final int XKB_KEY_Zen_Koho = (int)65341L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Zen_Koho 65341
     * }
     */
    public static int XKB_KEY_Zen_Koho() {
        return XKB_KEY_Zen_Koho;
    }
    private static final int XKB_KEY_Mae_Koho = (int)65342L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Mae_Koho 65342
     * }
     */
    public static int XKB_KEY_Mae_Koho() {
        return XKB_KEY_Mae_Koho;
    }
    private static final int XKB_KEY_Home = (int)65360L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Home 65360
     * }
     */
    public static int XKB_KEY_Home() {
        return XKB_KEY_Home;
    }
    private static final int XKB_KEY_Left = (int)65361L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Left 65361
     * }
     */
    public static int XKB_KEY_Left() {
        return XKB_KEY_Left;
    }
    private static final int XKB_KEY_Up = (int)65362L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Up 65362
     * }
     */
    public static int XKB_KEY_Up() {
        return XKB_KEY_Up;
    }
    private static final int XKB_KEY_Right = (int)65363L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Right 65363
     * }
     */
    public static int XKB_KEY_Right() {
        return XKB_KEY_Right;
    }
    private static final int XKB_KEY_Down = (int)65364L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Down 65364
     * }
     */
    public static int XKB_KEY_Down() {
        return XKB_KEY_Down;
    }
    private static final int XKB_KEY_Prior = (int)65365L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Prior 65365
     * }
     */
    public static int XKB_KEY_Prior() {
        return XKB_KEY_Prior;
    }
    private static final int XKB_KEY_Page_Up = (int)65365L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Page_Up 65365
     * }
     */
    public static int XKB_KEY_Page_Up() {
        return XKB_KEY_Page_Up;
    }
    private static final int XKB_KEY_Next = (int)65366L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Next 65366
     * }
     */
    public static int XKB_KEY_Next() {
        return XKB_KEY_Next;
    }
    private static final int XKB_KEY_Page_Down = (int)65366L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Page_Down 65366
     * }
     */
    public static int XKB_KEY_Page_Down() {
        return XKB_KEY_Page_Down;
    }
    private static final int XKB_KEY_End = (int)65367L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_End 65367
     * }
     */
    public static int XKB_KEY_End() {
        return XKB_KEY_End;
    }
    private static final int XKB_KEY_Begin = (int)65368L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Begin 65368
     * }
     */
    public static int XKB_KEY_Begin() {
        return XKB_KEY_Begin;
    }
    private static final int XKB_KEY_Select = (int)65376L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Select 65376
     * }
     */
    public static int XKB_KEY_Select() {
        return XKB_KEY_Select;
    }
    private static final int XKB_KEY_Print = (int)65377L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Print 65377
     * }
     */
    public static int XKB_KEY_Print() {
        return XKB_KEY_Print;
    }
    private static final int XKB_KEY_Execute = (int)65378L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Execute 65378
     * }
     */
    public static int XKB_KEY_Execute() {
        return XKB_KEY_Execute;
    }
    private static final int XKB_KEY_Insert = (int)65379L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Insert 65379
     * }
     */
    public static int XKB_KEY_Insert() {
        return XKB_KEY_Insert;
    }
    private static final int XKB_KEY_Undo = (int)65381L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Undo 65381
     * }
     */
    public static int XKB_KEY_Undo() {
        return XKB_KEY_Undo;
    }
    private static final int XKB_KEY_Redo = (int)65382L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Redo 65382
     * }
     */
    public static int XKB_KEY_Redo() {
        return XKB_KEY_Redo;
    }
    private static final int XKB_KEY_Menu = (int)65383L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Menu 65383
     * }
     */
    public static int XKB_KEY_Menu() {
        return XKB_KEY_Menu;
    }
    private static final int XKB_KEY_Find = (int)65384L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Find 65384
     * }
     */
    public static int XKB_KEY_Find() {
        return XKB_KEY_Find;
    }
    private static final int XKB_KEY_Cancel = (int)65385L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Cancel 65385
     * }
     */
    public static int XKB_KEY_Cancel() {
        return XKB_KEY_Cancel;
    }
    private static final int XKB_KEY_Help = (int)65386L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Help 65386
     * }
     */
    public static int XKB_KEY_Help() {
        return XKB_KEY_Help;
    }
    private static final int XKB_KEY_Break = (int)65387L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Break 65387
     * }
     */
    public static int XKB_KEY_Break() {
        return XKB_KEY_Break;
    }
    private static final int XKB_KEY_Mode_switch = (int)65406L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Mode_switch 65406
     * }
     */
    public static int XKB_KEY_Mode_switch() {
        return XKB_KEY_Mode_switch;
    }
    private static final int XKB_KEY_script_switch = (int)65406L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_script_switch 65406
     * }
     */
    public static int XKB_KEY_script_switch() {
        return XKB_KEY_script_switch;
    }
    private static final int XKB_KEY_Num_Lock = (int)65407L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Num_Lock 65407
     * }
     */
    public static int XKB_KEY_Num_Lock() {
        return XKB_KEY_Num_Lock;
    }
    private static final int XKB_KEY_KP_Space = (int)65408L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Space 65408
     * }
     */
    public static int XKB_KEY_KP_Space() {
        return XKB_KEY_KP_Space;
    }
    private static final int XKB_KEY_KP_Tab = (int)65417L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Tab 65417
     * }
     */
    public static int XKB_KEY_KP_Tab() {
        return XKB_KEY_KP_Tab;
    }
    private static final int XKB_KEY_KP_Enter = (int)65421L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Enter 65421
     * }
     */
    public static int XKB_KEY_KP_Enter() {
        return XKB_KEY_KP_Enter;
    }
    private static final int XKB_KEY_KP_F1 = (int)65425L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_F1 65425
     * }
     */
    public static int XKB_KEY_KP_F1() {
        return XKB_KEY_KP_F1;
    }
    private static final int XKB_KEY_KP_F2 = (int)65426L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_F2 65426
     * }
     */
    public static int XKB_KEY_KP_F2() {
        return XKB_KEY_KP_F2;
    }
    private static final int XKB_KEY_KP_F3 = (int)65427L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_F3 65427
     * }
     */
    public static int XKB_KEY_KP_F3() {
        return XKB_KEY_KP_F3;
    }
    private static final int XKB_KEY_KP_F4 = (int)65428L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_F4 65428
     * }
     */
    public static int XKB_KEY_KP_F4() {
        return XKB_KEY_KP_F4;
    }
    private static final int XKB_KEY_KP_Home = (int)65429L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Home 65429
     * }
     */
    public static int XKB_KEY_KP_Home() {
        return XKB_KEY_KP_Home;
    }
    private static final int XKB_KEY_KP_Left = (int)65430L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Left 65430
     * }
     */
    public static int XKB_KEY_KP_Left() {
        return XKB_KEY_KP_Left;
    }
    private static final int XKB_KEY_KP_Up = (int)65431L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Up 65431
     * }
     */
    public static int XKB_KEY_KP_Up() {
        return XKB_KEY_KP_Up;
    }
    private static final int XKB_KEY_KP_Right = (int)65432L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Right 65432
     * }
     */
    public static int XKB_KEY_KP_Right() {
        return XKB_KEY_KP_Right;
    }
    private static final int XKB_KEY_KP_Down = (int)65433L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Down 65433
     * }
     */
    public static int XKB_KEY_KP_Down() {
        return XKB_KEY_KP_Down;
    }
    private static final int XKB_KEY_KP_Prior = (int)65434L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Prior 65434
     * }
     */
    public static int XKB_KEY_KP_Prior() {
        return XKB_KEY_KP_Prior;
    }
    private static final int XKB_KEY_KP_Page_Up = (int)65434L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Page_Up 65434
     * }
     */
    public static int XKB_KEY_KP_Page_Up() {
        return XKB_KEY_KP_Page_Up;
    }
    private static final int XKB_KEY_KP_Next = (int)65435L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Next 65435
     * }
     */
    public static int XKB_KEY_KP_Next() {
        return XKB_KEY_KP_Next;
    }
    private static final int XKB_KEY_KP_Page_Down = (int)65435L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Page_Down 65435
     * }
     */
    public static int XKB_KEY_KP_Page_Down() {
        return XKB_KEY_KP_Page_Down;
    }
    private static final int XKB_KEY_KP_End = (int)65436L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_End 65436
     * }
     */
    public static int XKB_KEY_KP_End() {
        return XKB_KEY_KP_End;
    }
    private static final int XKB_KEY_KP_Begin = (int)65437L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Begin 65437
     * }
     */
    public static int XKB_KEY_KP_Begin() {
        return XKB_KEY_KP_Begin;
    }
    private static final int XKB_KEY_KP_Insert = (int)65438L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Insert 65438
     * }
     */
    public static int XKB_KEY_KP_Insert() {
        return XKB_KEY_KP_Insert;
    }
    private static final int XKB_KEY_KP_Delete = (int)65439L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Delete 65439
     * }
     */
    public static int XKB_KEY_KP_Delete() {
        return XKB_KEY_KP_Delete;
    }
    private static final int XKB_KEY_KP_Equal = (int)65469L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Equal 65469
     * }
     */
    public static int XKB_KEY_KP_Equal() {
        return XKB_KEY_KP_Equal;
    }
    private static final int XKB_KEY_KP_Multiply = (int)65450L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Multiply 65450
     * }
     */
    public static int XKB_KEY_KP_Multiply() {
        return XKB_KEY_KP_Multiply;
    }
    private static final int XKB_KEY_KP_Add = (int)65451L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Add 65451
     * }
     */
    public static int XKB_KEY_KP_Add() {
        return XKB_KEY_KP_Add;
    }
    private static final int XKB_KEY_KP_Separator = (int)65452L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Separator 65452
     * }
     */
    public static int XKB_KEY_KP_Separator() {
        return XKB_KEY_KP_Separator;
    }
    private static final int XKB_KEY_KP_Subtract = (int)65453L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Subtract 65453
     * }
     */
    public static int XKB_KEY_KP_Subtract() {
        return XKB_KEY_KP_Subtract;
    }
    private static final int XKB_KEY_KP_Decimal = (int)65454L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Decimal 65454
     * }
     */
    public static int XKB_KEY_KP_Decimal() {
        return XKB_KEY_KP_Decimal;
    }
    private static final int XKB_KEY_KP_Divide = (int)65455L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_Divide 65455
     * }
     */
    public static int XKB_KEY_KP_Divide() {
        return XKB_KEY_KP_Divide;
    }
    private static final int XKB_KEY_KP_0 = (int)65456L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_0 65456
     * }
     */
    public static int XKB_KEY_KP_0() {
        return XKB_KEY_KP_0;
    }
    private static final int XKB_KEY_KP_1 = (int)65457L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_1 65457
     * }
     */
    public static int XKB_KEY_KP_1() {
        return XKB_KEY_KP_1;
    }
    private static final int XKB_KEY_KP_2 = (int)65458L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_2 65458
     * }
     */
    public static int XKB_KEY_KP_2() {
        return XKB_KEY_KP_2;
    }
    private static final int XKB_KEY_KP_3 = (int)65459L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_3 65459
     * }
     */
    public static int XKB_KEY_KP_3() {
        return XKB_KEY_KP_3;
    }
    private static final int XKB_KEY_KP_4 = (int)65460L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_4 65460
     * }
     */
    public static int XKB_KEY_KP_4() {
        return XKB_KEY_KP_4;
    }
    private static final int XKB_KEY_KP_5 = (int)65461L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_5 65461
     * }
     */
    public static int XKB_KEY_KP_5() {
        return XKB_KEY_KP_5;
    }
    private static final int XKB_KEY_KP_6 = (int)65462L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_6 65462
     * }
     */
    public static int XKB_KEY_KP_6() {
        return XKB_KEY_KP_6;
    }
    private static final int XKB_KEY_KP_7 = (int)65463L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_7 65463
     * }
     */
    public static int XKB_KEY_KP_7() {
        return XKB_KEY_KP_7;
    }
    private static final int XKB_KEY_KP_8 = (int)65464L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_8 65464
     * }
     */
    public static int XKB_KEY_KP_8() {
        return XKB_KEY_KP_8;
    }
    private static final int XKB_KEY_KP_9 = (int)65465L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_KP_9 65465
     * }
     */
    public static int XKB_KEY_KP_9() {
        return XKB_KEY_KP_9;
    }
    private static final int XKB_KEY_F1 = (int)65470L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F1 65470
     * }
     */
    public static int XKB_KEY_F1() {
        return XKB_KEY_F1;
    }
    private static final int XKB_KEY_F2 = (int)65471L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F2 65471
     * }
     */
    public static int XKB_KEY_F2() {
        return XKB_KEY_F2;
    }
    private static final int XKB_KEY_F3 = (int)65472L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F3 65472
     * }
     */
    public static int XKB_KEY_F3() {
        return XKB_KEY_F3;
    }
    private static final int XKB_KEY_F4 = (int)65473L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F4 65473
     * }
     */
    public static int XKB_KEY_F4() {
        return XKB_KEY_F4;
    }
    private static final int XKB_KEY_F5 = (int)65474L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F5 65474
     * }
     */
    public static int XKB_KEY_F5() {
        return XKB_KEY_F5;
    }
    private static final int XKB_KEY_F6 = (int)65475L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F6 65475
     * }
     */
    public static int XKB_KEY_F6() {
        return XKB_KEY_F6;
    }
    private static final int XKB_KEY_F7 = (int)65476L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F7 65476
     * }
     */
    public static int XKB_KEY_F7() {
        return XKB_KEY_F7;
    }
    private static final int XKB_KEY_F8 = (int)65477L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F8 65477
     * }
     */
    public static int XKB_KEY_F8() {
        return XKB_KEY_F8;
    }
    private static final int XKB_KEY_F9 = (int)65478L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F9 65478
     * }
     */
    public static int XKB_KEY_F9() {
        return XKB_KEY_F9;
    }
    private static final int XKB_KEY_F10 = (int)65479L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F10 65479
     * }
     */
    public static int XKB_KEY_F10() {
        return XKB_KEY_F10;
    }
    private static final int XKB_KEY_F11 = (int)65480L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F11 65480
     * }
     */
    public static int XKB_KEY_F11() {
        return XKB_KEY_F11;
    }
    private static final int XKB_KEY_L1 = (int)65480L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L1 65480
     * }
     */
    public static int XKB_KEY_L1() {
        return XKB_KEY_L1;
    }
    private static final int XKB_KEY_F12 = (int)65481L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F12 65481
     * }
     */
    public static int XKB_KEY_F12() {
        return XKB_KEY_F12;
    }
    private static final int XKB_KEY_L2 = (int)65481L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L2 65481
     * }
     */
    public static int XKB_KEY_L2() {
        return XKB_KEY_L2;
    }
    private static final int XKB_KEY_F13 = (int)65482L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F13 65482
     * }
     */
    public static int XKB_KEY_F13() {
        return XKB_KEY_F13;
    }
    private static final int XKB_KEY_L3 = (int)65482L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L3 65482
     * }
     */
    public static int XKB_KEY_L3() {
        return XKB_KEY_L3;
    }
    private static final int XKB_KEY_F14 = (int)65483L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F14 65483
     * }
     */
    public static int XKB_KEY_F14() {
        return XKB_KEY_F14;
    }
    private static final int XKB_KEY_L4 = (int)65483L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L4 65483
     * }
     */
    public static int XKB_KEY_L4() {
        return XKB_KEY_L4;
    }
    private static final int XKB_KEY_F15 = (int)65484L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F15 65484
     * }
     */
    public static int XKB_KEY_F15() {
        return XKB_KEY_F15;
    }
    private static final int XKB_KEY_L5 = (int)65484L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L5 65484
     * }
     */
    public static int XKB_KEY_L5() {
        return XKB_KEY_L5;
    }
    private static final int XKB_KEY_F16 = (int)65485L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F16 65485
     * }
     */
    public static int XKB_KEY_F16() {
        return XKB_KEY_F16;
    }
    private static final int XKB_KEY_L6 = (int)65485L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L6 65485
     * }
     */
    public static int XKB_KEY_L6() {
        return XKB_KEY_L6;
    }
    private static final int XKB_KEY_F17 = (int)65486L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F17 65486
     * }
     */
    public static int XKB_KEY_F17() {
        return XKB_KEY_F17;
    }
    private static final int XKB_KEY_L7 = (int)65486L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L7 65486
     * }
     */
    public static int XKB_KEY_L7() {
        return XKB_KEY_L7;
    }
    private static final int XKB_KEY_F18 = (int)65487L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F18 65487
     * }
     */
    public static int XKB_KEY_F18() {
        return XKB_KEY_F18;
    }
    private static final int XKB_KEY_L8 = (int)65487L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L8 65487
     * }
     */
    public static int XKB_KEY_L8() {
        return XKB_KEY_L8;
    }
    private static final int XKB_KEY_F19 = (int)65488L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F19 65488
     * }
     */
    public static int XKB_KEY_F19() {
        return XKB_KEY_F19;
    }
    private static final int XKB_KEY_L9 = (int)65488L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L9 65488
     * }
     */
    public static int XKB_KEY_L9() {
        return XKB_KEY_L9;
    }
    private static final int XKB_KEY_F20 = (int)65489L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F20 65489
     * }
     */
    public static int XKB_KEY_F20() {
        return XKB_KEY_F20;
    }
    private static final int XKB_KEY_L10 = (int)65489L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L10 65489
     * }
     */
    public static int XKB_KEY_L10() {
        return XKB_KEY_L10;
    }
    private static final int XKB_KEY_F21 = (int)65490L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F21 65490
     * }
     */
    public static int XKB_KEY_F21() {
        return XKB_KEY_F21;
    }
    private static final int XKB_KEY_R1 = (int)65490L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R1 65490
     * }
     */
    public static int XKB_KEY_R1() {
        return XKB_KEY_R1;
    }
    private static final int XKB_KEY_F22 = (int)65491L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F22 65491
     * }
     */
    public static int XKB_KEY_F22() {
        return XKB_KEY_F22;
    }
    private static final int XKB_KEY_R2 = (int)65491L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R2 65491
     * }
     */
    public static int XKB_KEY_R2() {
        return XKB_KEY_R2;
    }
    private static final int XKB_KEY_F23 = (int)65492L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F23 65492
     * }
     */
    public static int XKB_KEY_F23() {
        return XKB_KEY_F23;
    }
    private static final int XKB_KEY_R3 = (int)65492L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R3 65492
     * }
     */
    public static int XKB_KEY_R3() {
        return XKB_KEY_R3;
    }
    private static final int XKB_KEY_F24 = (int)65493L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F24 65493
     * }
     */
    public static int XKB_KEY_F24() {
        return XKB_KEY_F24;
    }
    private static final int XKB_KEY_R4 = (int)65493L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R4 65493
     * }
     */
    public static int XKB_KEY_R4() {
        return XKB_KEY_R4;
    }
    private static final int XKB_KEY_F25 = (int)65494L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F25 65494
     * }
     */
    public static int XKB_KEY_F25() {
        return XKB_KEY_F25;
    }
    private static final int XKB_KEY_R5 = (int)65494L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R5 65494
     * }
     */
    public static int XKB_KEY_R5() {
        return XKB_KEY_R5;
    }
    private static final int XKB_KEY_F26 = (int)65495L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F26 65495
     * }
     */
    public static int XKB_KEY_F26() {
        return XKB_KEY_F26;
    }
    private static final int XKB_KEY_R6 = (int)65495L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R6 65495
     * }
     */
    public static int XKB_KEY_R6() {
        return XKB_KEY_R6;
    }
    private static final int XKB_KEY_F27 = (int)65496L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F27 65496
     * }
     */
    public static int XKB_KEY_F27() {
        return XKB_KEY_F27;
    }
    private static final int XKB_KEY_R7 = (int)65496L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R7 65496
     * }
     */
    public static int XKB_KEY_R7() {
        return XKB_KEY_R7;
    }
    private static final int XKB_KEY_F28 = (int)65497L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F28 65497
     * }
     */
    public static int XKB_KEY_F28() {
        return XKB_KEY_F28;
    }
    private static final int XKB_KEY_R8 = (int)65497L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R8 65497
     * }
     */
    public static int XKB_KEY_R8() {
        return XKB_KEY_R8;
    }
    private static final int XKB_KEY_F29 = (int)65498L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F29 65498
     * }
     */
    public static int XKB_KEY_F29() {
        return XKB_KEY_F29;
    }
    private static final int XKB_KEY_R9 = (int)65498L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R9 65498
     * }
     */
    public static int XKB_KEY_R9() {
        return XKB_KEY_R9;
    }
    private static final int XKB_KEY_F30 = (int)65499L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F30 65499
     * }
     */
    public static int XKB_KEY_F30() {
        return XKB_KEY_F30;
    }
    private static final int XKB_KEY_R10 = (int)65499L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R10 65499
     * }
     */
    public static int XKB_KEY_R10() {
        return XKB_KEY_R10;
    }
    private static final int XKB_KEY_F31 = (int)65500L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F31 65500
     * }
     */
    public static int XKB_KEY_F31() {
        return XKB_KEY_F31;
    }
    private static final int XKB_KEY_R11 = (int)65500L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R11 65500
     * }
     */
    public static int XKB_KEY_R11() {
        return XKB_KEY_R11;
    }
    private static final int XKB_KEY_F32 = (int)65501L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F32 65501
     * }
     */
    public static int XKB_KEY_F32() {
        return XKB_KEY_F32;
    }
    private static final int XKB_KEY_R12 = (int)65501L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R12 65501
     * }
     */
    public static int XKB_KEY_R12() {
        return XKB_KEY_R12;
    }
    private static final int XKB_KEY_F33 = (int)65502L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F33 65502
     * }
     */
    public static int XKB_KEY_F33() {
        return XKB_KEY_F33;
    }
    private static final int XKB_KEY_R13 = (int)65502L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R13 65502
     * }
     */
    public static int XKB_KEY_R13() {
        return XKB_KEY_R13;
    }
    private static final int XKB_KEY_F34 = (int)65503L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F34 65503
     * }
     */
    public static int XKB_KEY_F34() {
        return XKB_KEY_F34;
    }
    private static final int XKB_KEY_R14 = (int)65503L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R14 65503
     * }
     */
    public static int XKB_KEY_R14() {
        return XKB_KEY_R14;
    }
    private static final int XKB_KEY_F35 = (int)65504L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F35 65504
     * }
     */
    public static int XKB_KEY_F35() {
        return XKB_KEY_F35;
    }
    private static final int XKB_KEY_R15 = (int)65504L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R15 65504
     * }
     */
    public static int XKB_KEY_R15() {
        return XKB_KEY_R15;
    }
    private static final int XKB_KEY_Shift_L = (int)65505L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Shift_L 65505
     * }
     */
    public static int XKB_KEY_Shift_L() {
        return XKB_KEY_Shift_L;
    }
    private static final int XKB_KEY_Shift_R = (int)65506L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Shift_R 65506
     * }
     */
    public static int XKB_KEY_Shift_R() {
        return XKB_KEY_Shift_R;
    }
    private static final int XKB_KEY_Control_L = (int)65507L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Control_L 65507
     * }
     */
    public static int XKB_KEY_Control_L() {
        return XKB_KEY_Control_L;
    }
    private static final int XKB_KEY_Control_R = (int)65508L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Control_R 65508
     * }
     */
    public static int XKB_KEY_Control_R() {
        return XKB_KEY_Control_R;
    }
    private static final int XKB_KEY_Caps_Lock = (int)65509L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Caps_Lock 65509
     * }
     */
    public static int XKB_KEY_Caps_Lock() {
        return XKB_KEY_Caps_Lock;
    }
    private static final int XKB_KEY_Shift_Lock = (int)65510L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Shift_Lock 65510
     * }
     */
    public static int XKB_KEY_Shift_Lock() {
        return XKB_KEY_Shift_Lock;
    }
    private static final int XKB_KEY_Meta_L = (int)65511L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Meta_L 65511
     * }
     */
    public static int XKB_KEY_Meta_L() {
        return XKB_KEY_Meta_L;
    }
    private static final int XKB_KEY_Meta_R = (int)65512L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Meta_R 65512
     * }
     */
    public static int XKB_KEY_Meta_R() {
        return XKB_KEY_Meta_R;
    }
    private static final int XKB_KEY_Alt_L = (int)65513L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Alt_L 65513
     * }
     */
    public static int XKB_KEY_Alt_L() {
        return XKB_KEY_Alt_L;
    }
    private static final int XKB_KEY_Alt_R = (int)65514L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Alt_R 65514
     * }
     */
    public static int XKB_KEY_Alt_R() {
        return XKB_KEY_Alt_R;
    }
    private static final int XKB_KEY_Super_L = (int)65515L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Super_L 65515
     * }
     */
    public static int XKB_KEY_Super_L() {
        return XKB_KEY_Super_L;
    }
    private static final int XKB_KEY_Super_R = (int)65516L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Super_R 65516
     * }
     */
    public static int XKB_KEY_Super_R() {
        return XKB_KEY_Super_R;
    }
    private static final int XKB_KEY_Hyper_L = (int)65517L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Hyper_L 65517
     * }
     */
    public static int XKB_KEY_Hyper_L() {
        return XKB_KEY_Hyper_L;
    }
    private static final int XKB_KEY_Hyper_R = (int)65518L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Hyper_R 65518
     * }
     */
    public static int XKB_KEY_Hyper_R() {
        return XKB_KEY_Hyper_R;
    }
    private static final int XKB_KEY_ISO_Lock = (int)65025L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Lock 65025
     * }
     */
    public static int XKB_KEY_ISO_Lock() {
        return XKB_KEY_ISO_Lock;
    }
    private static final int XKB_KEY_ISO_Level2_Latch = (int)65026L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level2_Latch 65026
     * }
     */
    public static int XKB_KEY_ISO_Level2_Latch() {
        return XKB_KEY_ISO_Level2_Latch;
    }
    private static final int XKB_KEY_ISO_Level3_Shift = (int)65027L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level3_Shift 65027
     * }
     */
    public static int XKB_KEY_ISO_Level3_Shift() {
        return XKB_KEY_ISO_Level3_Shift;
    }
    private static final int XKB_KEY_ISO_Level3_Latch = (int)65028L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level3_Latch 65028
     * }
     */
    public static int XKB_KEY_ISO_Level3_Latch() {
        return XKB_KEY_ISO_Level3_Latch;
    }
    private static final int XKB_KEY_ISO_Level3_Lock = (int)65029L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level3_Lock 65029
     * }
     */
    public static int XKB_KEY_ISO_Level3_Lock() {
        return XKB_KEY_ISO_Level3_Lock;
    }
    private static final int XKB_KEY_ISO_Level5_Shift = (int)65041L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level5_Shift 65041
     * }
     */
    public static int XKB_KEY_ISO_Level5_Shift() {
        return XKB_KEY_ISO_Level5_Shift;
    }
    private static final int XKB_KEY_ISO_Level5_Latch = (int)65042L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level5_Latch 65042
     * }
     */
    public static int XKB_KEY_ISO_Level5_Latch() {
        return XKB_KEY_ISO_Level5_Latch;
    }
    private static final int XKB_KEY_ISO_Level5_Lock = (int)65043L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Level5_Lock 65043
     * }
     */
    public static int XKB_KEY_ISO_Level5_Lock() {
        return XKB_KEY_ISO_Level5_Lock;
    }
    private static final int XKB_KEY_ISO_Group_Shift = (int)65406L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Group_Shift 65406
     * }
     */
    public static int XKB_KEY_ISO_Group_Shift() {
        return XKB_KEY_ISO_Group_Shift;
    }
    private static final int XKB_KEY_ISO_Group_Latch = (int)65030L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Group_Latch 65030
     * }
     */
    public static int XKB_KEY_ISO_Group_Latch() {
        return XKB_KEY_ISO_Group_Latch;
    }
    private static final int XKB_KEY_ISO_Group_Lock = (int)65031L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Group_Lock 65031
     * }
     */
    public static int XKB_KEY_ISO_Group_Lock() {
        return XKB_KEY_ISO_Group_Lock;
    }
    private static final int XKB_KEY_ISO_Next_Group = (int)65032L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Next_Group 65032
     * }
     */
    public static int XKB_KEY_ISO_Next_Group() {
        return XKB_KEY_ISO_Next_Group;
    }
    private static final int XKB_KEY_ISO_Next_Group_Lock = (int)65033L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Next_Group_Lock 65033
     * }
     */
    public static int XKB_KEY_ISO_Next_Group_Lock() {
        return XKB_KEY_ISO_Next_Group_Lock;
    }
    private static final int XKB_KEY_ISO_Prev_Group = (int)65034L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Prev_Group 65034
     * }
     */
    public static int XKB_KEY_ISO_Prev_Group() {
        return XKB_KEY_ISO_Prev_Group;
    }
    private static final int XKB_KEY_ISO_Prev_Group_Lock = (int)65035L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Prev_Group_Lock 65035
     * }
     */
    public static int XKB_KEY_ISO_Prev_Group_Lock() {
        return XKB_KEY_ISO_Prev_Group_Lock;
    }
    private static final int XKB_KEY_ISO_First_Group = (int)65036L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_First_Group 65036
     * }
     */
    public static int XKB_KEY_ISO_First_Group() {
        return XKB_KEY_ISO_First_Group;
    }
    private static final int XKB_KEY_ISO_First_Group_Lock = (int)65037L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_First_Group_Lock 65037
     * }
     */
    public static int XKB_KEY_ISO_First_Group_Lock() {
        return XKB_KEY_ISO_First_Group_Lock;
    }
    private static final int XKB_KEY_ISO_Last_Group = (int)65038L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Last_Group 65038
     * }
     */
    public static int XKB_KEY_ISO_Last_Group() {
        return XKB_KEY_ISO_Last_Group;
    }
    private static final int XKB_KEY_ISO_Last_Group_Lock = (int)65039L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Last_Group_Lock 65039
     * }
     */
    public static int XKB_KEY_ISO_Last_Group_Lock() {
        return XKB_KEY_ISO_Last_Group_Lock;
    }
    private static final int XKB_KEY_ISO_Left_Tab = (int)65056L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Left_Tab 65056
     * }
     */
    public static int XKB_KEY_ISO_Left_Tab() {
        return XKB_KEY_ISO_Left_Tab;
    }
    private static final int XKB_KEY_ISO_Move_Line_Up = (int)65057L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Move_Line_Up 65057
     * }
     */
    public static int XKB_KEY_ISO_Move_Line_Up() {
        return XKB_KEY_ISO_Move_Line_Up;
    }
    private static final int XKB_KEY_ISO_Move_Line_Down = (int)65058L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Move_Line_Down 65058
     * }
     */
    public static int XKB_KEY_ISO_Move_Line_Down() {
        return XKB_KEY_ISO_Move_Line_Down;
    }
    private static final int XKB_KEY_ISO_Partial_Line_Up = (int)65059L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Partial_Line_Up 65059
     * }
     */
    public static int XKB_KEY_ISO_Partial_Line_Up() {
        return XKB_KEY_ISO_Partial_Line_Up;
    }
    private static final int XKB_KEY_ISO_Partial_Line_Down = (int)65060L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Partial_Line_Down 65060
     * }
     */
    public static int XKB_KEY_ISO_Partial_Line_Down() {
        return XKB_KEY_ISO_Partial_Line_Down;
    }
    private static final int XKB_KEY_ISO_Partial_Space_Left = (int)65061L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Partial_Space_Left 65061
     * }
     */
    public static int XKB_KEY_ISO_Partial_Space_Left() {
        return XKB_KEY_ISO_Partial_Space_Left;
    }
    private static final int XKB_KEY_ISO_Partial_Space_Right = (int)65062L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Partial_Space_Right 65062
     * }
     */
    public static int XKB_KEY_ISO_Partial_Space_Right() {
        return XKB_KEY_ISO_Partial_Space_Right;
    }
    private static final int XKB_KEY_ISO_Set_Margin_Left = (int)65063L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Set_Margin_Left 65063
     * }
     */
    public static int XKB_KEY_ISO_Set_Margin_Left() {
        return XKB_KEY_ISO_Set_Margin_Left;
    }
    private static final int XKB_KEY_ISO_Set_Margin_Right = (int)65064L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Set_Margin_Right 65064
     * }
     */
    public static int XKB_KEY_ISO_Set_Margin_Right() {
        return XKB_KEY_ISO_Set_Margin_Right;
    }
    private static final int XKB_KEY_ISO_Release_Margin_Left = (int)65065L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Release_Margin_Left 65065
     * }
     */
    public static int XKB_KEY_ISO_Release_Margin_Left() {
        return XKB_KEY_ISO_Release_Margin_Left;
    }
    private static final int XKB_KEY_ISO_Release_Margin_Right = (int)65066L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Release_Margin_Right 65066
     * }
     */
    public static int XKB_KEY_ISO_Release_Margin_Right() {
        return XKB_KEY_ISO_Release_Margin_Right;
    }
    private static final int XKB_KEY_ISO_Release_Both_Margins = (int)65067L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Release_Both_Margins 65067
     * }
     */
    public static int XKB_KEY_ISO_Release_Both_Margins() {
        return XKB_KEY_ISO_Release_Both_Margins;
    }
    private static final int XKB_KEY_ISO_Fast_Cursor_Left = (int)65068L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Fast_Cursor_Left 65068
     * }
     */
    public static int XKB_KEY_ISO_Fast_Cursor_Left() {
        return XKB_KEY_ISO_Fast_Cursor_Left;
    }
    private static final int XKB_KEY_ISO_Fast_Cursor_Right = (int)65069L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Fast_Cursor_Right 65069
     * }
     */
    public static int XKB_KEY_ISO_Fast_Cursor_Right() {
        return XKB_KEY_ISO_Fast_Cursor_Right;
    }
    private static final int XKB_KEY_ISO_Fast_Cursor_Up = (int)65070L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Fast_Cursor_Up 65070
     * }
     */
    public static int XKB_KEY_ISO_Fast_Cursor_Up() {
        return XKB_KEY_ISO_Fast_Cursor_Up;
    }
    private static final int XKB_KEY_ISO_Fast_Cursor_Down = (int)65071L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Fast_Cursor_Down 65071
     * }
     */
    public static int XKB_KEY_ISO_Fast_Cursor_Down() {
        return XKB_KEY_ISO_Fast_Cursor_Down;
    }
    private static final int XKB_KEY_ISO_Continuous_Underline = (int)65072L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Continuous_Underline 65072
     * }
     */
    public static int XKB_KEY_ISO_Continuous_Underline() {
        return XKB_KEY_ISO_Continuous_Underline;
    }
    private static final int XKB_KEY_ISO_Discontinuous_Underline = (int)65073L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Discontinuous_Underline 65073
     * }
     */
    public static int XKB_KEY_ISO_Discontinuous_Underline() {
        return XKB_KEY_ISO_Discontinuous_Underline;
    }
    private static final int XKB_KEY_ISO_Emphasize = (int)65074L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Emphasize 65074
     * }
     */
    public static int XKB_KEY_ISO_Emphasize() {
        return XKB_KEY_ISO_Emphasize;
    }
    private static final int XKB_KEY_ISO_Center_Object = (int)65075L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Center_Object 65075
     * }
     */
    public static int XKB_KEY_ISO_Center_Object() {
        return XKB_KEY_ISO_Center_Object;
    }
    private static final int XKB_KEY_ISO_Enter = (int)65076L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ISO_Enter 65076
     * }
     */
    public static int XKB_KEY_ISO_Enter() {
        return XKB_KEY_ISO_Enter;
    }
    private static final int XKB_KEY_dead_grave = (int)65104L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_grave 65104
     * }
     */
    public static int XKB_KEY_dead_grave() {
        return XKB_KEY_dead_grave;
    }
    private static final int XKB_KEY_dead_acute = (int)65105L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_acute 65105
     * }
     */
    public static int XKB_KEY_dead_acute() {
        return XKB_KEY_dead_acute;
    }
    private static final int XKB_KEY_dead_circumflex = (int)65106L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_circumflex 65106
     * }
     */
    public static int XKB_KEY_dead_circumflex() {
        return XKB_KEY_dead_circumflex;
    }
    private static final int XKB_KEY_dead_tilde = (int)65107L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_tilde 65107
     * }
     */
    public static int XKB_KEY_dead_tilde() {
        return XKB_KEY_dead_tilde;
    }
    private static final int XKB_KEY_dead_perispomeni = (int)65107L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_perispomeni 65107
     * }
     */
    public static int XKB_KEY_dead_perispomeni() {
        return XKB_KEY_dead_perispomeni;
    }
    private static final int XKB_KEY_dead_macron = (int)65108L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_macron 65108
     * }
     */
    public static int XKB_KEY_dead_macron() {
        return XKB_KEY_dead_macron;
    }
    private static final int XKB_KEY_dead_breve = (int)65109L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_breve 65109
     * }
     */
    public static int XKB_KEY_dead_breve() {
        return XKB_KEY_dead_breve;
    }
    private static final int XKB_KEY_dead_abovedot = (int)65110L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_abovedot 65110
     * }
     */
    public static int XKB_KEY_dead_abovedot() {
        return XKB_KEY_dead_abovedot;
    }
    private static final int XKB_KEY_dead_diaeresis = (int)65111L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_diaeresis 65111
     * }
     */
    public static int XKB_KEY_dead_diaeresis() {
        return XKB_KEY_dead_diaeresis;
    }
    private static final int XKB_KEY_dead_abovering = (int)65112L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_abovering 65112
     * }
     */
    public static int XKB_KEY_dead_abovering() {
        return XKB_KEY_dead_abovering;
    }
    private static final int XKB_KEY_dead_doubleacute = (int)65113L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_doubleacute 65113
     * }
     */
    public static int XKB_KEY_dead_doubleacute() {
        return XKB_KEY_dead_doubleacute;
    }
    private static final int XKB_KEY_dead_caron = (int)65114L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_caron 65114
     * }
     */
    public static int XKB_KEY_dead_caron() {
        return XKB_KEY_dead_caron;
    }
    private static final int XKB_KEY_dead_cedilla = (int)65115L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_cedilla 65115
     * }
     */
    public static int XKB_KEY_dead_cedilla() {
        return XKB_KEY_dead_cedilla;
    }
    private static final int XKB_KEY_dead_ogonek = (int)65116L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_ogonek 65116
     * }
     */
    public static int XKB_KEY_dead_ogonek() {
        return XKB_KEY_dead_ogonek;
    }
    private static final int XKB_KEY_dead_iota = (int)65117L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_iota 65117
     * }
     */
    public static int XKB_KEY_dead_iota() {
        return XKB_KEY_dead_iota;
    }
    private static final int XKB_KEY_dead_voiced_sound = (int)65118L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_voiced_sound 65118
     * }
     */
    public static int XKB_KEY_dead_voiced_sound() {
        return XKB_KEY_dead_voiced_sound;
    }
    private static final int XKB_KEY_dead_semivoiced_sound = (int)65119L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_semivoiced_sound 65119
     * }
     */
    public static int XKB_KEY_dead_semivoiced_sound() {
        return XKB_KEY_dead_semivoiced_sound;
    }
    private static final int XKB_KEY_dead_belowdot = (int)65120L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowdot 65120
     * }
     */
    public static int XKB_KEY_dead_belowdot() {
        return XKB_KEY_dead_belowdot;
    }
    private static final int XKB_KEY_dead_hook = (int)65121L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_hook 65121
     * }
     */
    public static int XKB_KEY_dead_hook() {
        return XKB_KEY_dead_hook;
    }
    private static final int XKB_KEY_dead_horn = (int)65122L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_horn 65122
     * }
     */
    public static int XKB_KEY_dead_horn() {
        return XKB_KEY_dead_horn;
    }
    private static final int XKB_KEY_dead_stroke = (int)65123L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_stroke 65123
     * }
     */
    public static int XKB_KEY_dead_stroke() {
        return XKB_KEY_dead_stroke;
    }
    private static final int XKB_KEY_dead_abovecomma = (int)65124L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_abovecomma 65124
     * }
     */
    public static int XKB_KEY_dead_abovecomma() {
        return XKB_KEY_dead_abovecomma;
    }
    private static final int XKB_KEY_dead_psili = (int)65124L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_psili 65124
     * }
     */
    public static int XKB_KEY_dead_psili() {
        return XKB_KEY_dead_psili;
    }
    private static final int XKB_KEY_dead_abovereversedcomma = (int)65125L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_abovereversedcomma 65125
     * }
     */
    public static int XKB_KEY_dead_abovereversedcomma() {
        return XKB_KEY_dead_abovereversedcomma;
    }
    private static final int XKB_KEY_dead_dasia = (int)65125L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_dasia 65125
     * }
     */
    public static int XKB_KEY_dead_dasia() {
        return XKB_KEY_dead_dasia;
    }
    private static final int XKB_KEY_dead_doublegrave = (int)65126L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_doublegrave 65126
     * }
     */
    public static int XKB_KEY_dead_doublegrave() {
        return XKB_KEY_dead_doublegrave;
    }
    private static final int XKB_KEY_dead_belowring = (int)65127L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowring 65127
     * }
     */
    public static int XKB_KEY_dead_belowring() {
        return XKB_KEY_dead_belowring;
    }
    private static final int XKB_KEY_dead_belowmacron = (int)65128L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowmacron 65128
     * }
     */
    public static int XKB_KEY_dead_belowmacron() {
        return XKB_KEY_dead_belowmacron;
    }
    private static final int XKB_KEY_dead_belowcircumflex = (int)65129L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowcircumflex 65129
     * }
     */
    public static int XKB_KEY_dead_belowcircumflex() {
        return XKB_KEY_dead_belowcircumflex;
    }
    private static final int XKB_KEY_dead_belowtilde = (int)65130L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowtilde 65130
     * }
     */
    public static int XKB_KEY_dead_belowtilde() {
        return XKB_KEY_dead_belowtilde;
    }
    private static final int XKB_KEY_dead_belowbreve = (int)65131L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowbreve 65131
     * }
     */
    public static int XKB_KEY_dead_belowbreve() {
        return XKB_KEY_dead_belowbreve;
    }
    private static final int XKB_KEY_dead_belowdiaeresis = (int)65132L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowdiaeresis 65132
     * }
     */
    public static int XKB_KEY_dead_belowdiaeresis() {
        return XKB_KEY_dead_belowdiaeresis;
    }
    private static final int XKB_KEY_dead_invertedbreve = (int)65133L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_invertedbreve 65133
     * }
     */
    public static int XKB_KEY_dead_invertedbreve() {
        return XKB_KEY_dead_invertedbreve;
    }
    private static final int XKB_KEY_dead_belowcomma = (int)65134L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowcomma 65134
     * }
     */
    public static int XKB_KEY_dead_belowcomma() {
        return XKB_KEY_dead_belowcomma;
    }
    private static final int XKB_KEY_dead_currency = (int)65135L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_currency 65135
     * }
     */
    public static int XKB_KEY_dead_currency() {
        return XKB_KEY_dead_currency;
    }
    private static final int XKB_KEY_dead_lowline = (int)65168L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_lowline 65168
     * }
     */
    public static int XKB_KEY_dead_lowline() {
        return XKB_KEY_dead_lowline;
    }
    private static final int XKB_KEY_dead_aboveverticalline = (int)65169L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_aboveverticalline 65169
     * }
     */
    public static int XKB_KEY_dead_aboveverticalline() {
        return XKB_KEY_dead_aboveverticalline;
    }
    private static final int XKB_KEY_dead_belowverticalline = (int)65170L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_belowverticalline 65170
     * }
     */
    public static int XKB_KEY_dead_belowverticalline() {
        return XKB_KEY_dead_belowverticalline;
    }
    private static final int XKB_KEY_dead_longsolidusoverlay = (int)65171L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_longsolidusoverlay 65171
     * }
     */
    public static int XKB_KEY_dead_longsolidusoverlay() {
        return XKB_KEY_dead_longsolidusoverlay;
    }
    private static final int XKB_KEY_dead_a = (int)65152L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_a 65152
     * }
     */
    public static int XKB_KEY_dead_a() {
        return XKB_KEY_dead_a;
    }
    private static final int XKB_KEY_dead_A = (int)65153L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_A 65153
     * }
     */
    public static int XKB_KEY_dead_A() {
        return XKB_KEY_dead_A;
    }
    private static final int XKB_KEY_dead_e = (int)65154L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_e 65154
     * }
     */
    public static int XKB_KEY_dead_e() {
        return XKB_KEY_dead_e;
    }
    private static final int XKB_KEY_dead_E = (int)65155L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_E 65155
     * }
     */
    public static int XKB_KEY_dead_E() {
        return XKB_KEY_dead_E;
    }
    private static final int XKB_KEY_dead_i = (int)65156L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_i 65156
     * }
     */
    public static int XKB_KEY_dead_i() {
        return XKB_KEY_dead_i;
    }
    private static final int XKB_KEY_dead_I = (int)65157L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_I 65157
     * }
     */
    public static int XKB_KEY_dead_I() {
        return XKB_KEY_dead_I;
    }
    private static final int XKB_KEY_dead_o = (int)65158L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_o 65158
     * }
     */
    public static int XKB_KEY_dead_o() {
        return XKB_KEY_dead_o;
    }
    private static final int XKB_KEY_dead_O = (int)65159L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_O 65159
     * }
     */
    public static int XKB_KEY_dead_O() {
        return XKB_KEY_dead_O;
    }
    private static final int XKB_KEY_dead_u = (int)65160L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_u 65160
     * }
     */
    public static int XKB_KEY_dead_u() {
        return XKB_KEY_dead_u;
    }
    private static final int XKB_KEY_dead_U = (int)65161L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_U 65161
     * }
     */
    public static int XKB_KEY_dead_U() {
        return XKB_KEY_dead_U;
    }
    private static final int XKB_KEY_dead_small_schwa = (int)65162L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_small_schwa 65162
     * }
     */
    public static int XKB_KEY_dead_small_schwa() {
        return XKB_KEY_dead_small_schwa;
    }
    private static final int XKB_KEY_dead_schwa = (int)65162L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_schwa 65162
     * }
     */
    public static int XKB_KEY_dead_schwa() {
        return XKB_KEY_dead_schwa;
    }
    private static final int XKB_KEY_dead_capital_schwa = (int)65163L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_capital_schwa 65163
     * }
     */
    public static int XKB_KEY_dead_capital_schwa() {
        return XKB_KEY_dead_capital_schwa;
    }
    private static final int XKB_KEY_dead_SCHWA = (int)65163L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_SCHWA 65163
     * }
     */
    public static int XKB_KEY_dead_SCHWA() {
        return XKB_KEY_dead_SCHWA;
    }
    private static final int XKB_KEY_dead_greek = (int)65164L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_greek 65164
     * }
     */
    public static int XKB_KEY_dead_greek() {
        return XKB_KEY_dead_greek;
    }
    private static final int XKB_KEY_dead_hamza = (int)65165L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dead_hamza 65165
     * }
     */
    public static int XKB_KEY_dead_hamza() {
        return XKB_KEY_dead_hamza;
    }
    private static final int XKB_KEY_First_Virtual_Screen = (int)65232L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_First_Virtual_Screen 65232
     * }
     */
    public static int XKB_KEY_First_Virtual_Screen() {
        return XKB_KEY_First_Virtual_Screen;
    }
    private static final int XKB_KEY_Prev_Virtual_Screen = (int)65233L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Prev_Virtual_Screen 65233
     * }
     */
    public static int XKB_KEY_Prev_Virtual_Screen() {
        return XKB_KEY_Prev_Virtual_Screen;
    }
    private static final int XKB_KEY_Next_Virtual_Screen = (int)65234L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Next_Virtual_Screen 65234
     * }
     */
    public static int XKB_KEY_Next_Virtual_Screen() {
        return XKB_KEY_Next_Virtual_Screen;
    }
    private static final int XKB_KEY_Last_Virtual_Screen = (int)65236L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Last_Virtual_Screen 65236
     * }
     */
    public static int XKB_KEY_Last_Virtual_Screen() {
        return XKB_KEY_Last_Virtual_Screen;
    }
    private static final int XKB_KEY_Terminate_Server = (int)65237L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Terminate_Server 65237
     * }
     */
    public static int XKB_KEY_Terminate_Server() {
        return XKB_KEY_Terminate_Server;
    }
    private static final int XKB_KEY_AccessX_Enable = (int)65136L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_AccessX_Enable 65136
     * }
     */
    public static int XKB_KEY_AccessX_Enable() {
        return XKB_KEY_AccessX_Enable;
    }
    private static final int XKB_KEY_AccessX_Feedback_Enable = (int)65137L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_AccessX_Feedback_Enable 65137
     * }
     */
    public static int XKB_KEY_AccessX_Feedback_Enable() {
        return XKB_KEY_AccessX_Feedback_Enable;
    }
    private static final int XKB_KEY_RepeatKeys_Enable = (int)65138L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_RepeatKeys_Enable 65138
     * }
     */
    public static int XKB_KEY_RepeatKeys_Enable() {
        return XKB_KEY_RepeatKeys_Enable;
    }
    private static final int XKB_KEY_SlowKeys_Enable = (int)65139L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_SlowKeys_Enable 65139
     * }
     */
    public static int XKB_KEY_SlowKeys_Enable() {
        return XKB_KEY_SlowKeys_Enable;
    }
    private static final int XKB_KEY_BounceKeys_Enable = (int)65140L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_BounceKeys_Enable 65140
     * }
     */
    public static int XKB_KEY_BounceKeys_Enable() {
        return XKB_KEY_BounceKeys_Enable;
    }
    private static final int XKB_KEY_StickyKeys_Enable = (int)65141L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_StickyKeys_Enable 65141
     * }
     */
    public static int XKB_KEY_StickyKeys_Enable() {
        return XKB_KEY_StickyKeys_Enable;
    }
    private static final int XKB_KEY_MouseKeys_Enable = (int)65142L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_MouseKeys_Enable 65142
     * }
     */
    public static int XKB_KEY_MouseKeys_Enable() {
        return XKB_KEY_MouseKeys_Enable;
    }
    private static final int XKB_KEY_MouseKeys_Accel_Enable = (int)65143L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_MouseKeys_Accel_Enable 65143
     * }
     */
    public static int XKB_KEY_MouseKeys_Accel_Enable() {
        return XKB_KEY_MouseKeys_Accel_Enable;
    }
    private static final int XKB_KEY_Overlay1_Enable = (int)65144L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Overlay1_Enable 65144
     * }
     */
    public static int XKB_KEY_Overlay1_Enable() {
        return XKB_KEY_Overlay1_Enable;
    }
    private static final int XKB_KEY_Overlay2_Enable = (int)65145L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Overlay2_Enable 65145
     * }
     */
    public static int XKB_KEY_Overlay2_Enable() {
        return XKB_KEY_Overlay2_Enable;
    }
    private static final int XKB_KEY_AudibleBell_Enable = (int)65146L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_AudibleBell_Enable 65146
     * }
     */
    public static int XKB_KEY_AudibleBell_Enable() {
        return XKB_KEY_AudibleBell_Enable;
    }
    private static final int XKB_KEY_Pointer_Left = (int)65248L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Left 65248
     * }
     */
    public static int XKB_KEY_Pointer_Left() {
        return XKB_KEY_Pointer_Left;
    }
    private static final int XKB_KEY_Pointer_Right = (int)65249L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Right 65249
     * }
     */
    public static int XKB_KEY_Pointer_Right() {
        return XKB_KEY_Pointer_Right;
    }
    private static final int XKB_KEY_Pointer_Up = (int)65250L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Up 65250
     * }
     */
    public static int XKB_KEY_Pointer_Up() {
        return XKB_KEY_Pointer_Up;
    }
    private static final int XKB_KEY_Pointer_Down = (int)65251L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Down 65251
     * }
     */
    public static int XKB_KEY_Pointer_Down() {
        return XKB_KEY_Pointer_Down;
    }
    private static final int XKB_KEY_Pointer_UpLeft = (int)65252L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_UpLeft 65252
     * }
     */
    public static int XKB_KEY_Pointer_UpLeft() {
        return XKB_KEY_Pointer_UpLeft;
    }
    private static final int XKB_KEY_Pointer_UpRight = (int)65253L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_UpRight 65253
     * }
     */
    public static int XKB_KEY_Pointer_UpRight() {
        return XKB_KEY_Pointer_UpRight;
    }
    private static final int XKB_KEY_Pointer_DownLeft = (int)65254L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DownLeft 65254
     * }
     */
    public static int XKB_KEY_Pointer_DownLeft() {
        return XKB_KEY_Pointer_DownLeft;
    }
    private static final int XKB_KEY_Pointer_DownRight = (int)65255L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DownRight 65255
     * }
     */
    public static int XKB_KEY_Pointer_DownRight() {
        return XKB_KEY_Pointer_DownRight;
    }
    private static final int XKB_KEY_Pointer_Button_Dflt = (int)65256L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Button_Dflt 65256
     * }
     */
    public static int XKB_KEY_Pointer_Button_Dflt() {
        return XKB_KEY_Pointer_Button_Dflt;
    }
    private static final int XKB_KEY_Pointer_Button1 = (int)65257L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Button1 65257
     * }
     */
    public static int XKB_KEY_Pointer_Button1() {
        return XKB_KEY_Pointer_Button1;
    }
    private static final int XKB_KEY_Pointer_Button2 = (int)65258L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Button2 65258
     * }
     */
    public static int XKB_KEY_Pointer_Button2() {
        return XKB_KEY_Pointer_Button2;
    }
    private static final int XKB_KEY_Pointer_Button3 = (int)65259L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Button3 65259
     * }
     */
    public static int XKB_KEY_Pointer_Button3() {
        return XKB_KEY_Pointer_Button3;
    }
    private static final int XKB_KEY_Pointer_Button4 = (int)65260L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Button4 65260
     * }
     */
    public static int XKB_KEY_Pointer_Button4() {
        return XKB_KEY_Pointer_Button4;
    }
    private static final int XKB_KEY_Pointer_Button5 = (int)65261L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Button5 65261
     * }
     */
    public static int XKB_KEY_Pointer_Button5() {
        return XKB_KEY_Pointer_Button5;
    }
    private static final int XKB_KEY_Pointer_DblClick_Dflt = (int)65262L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DblClick_Dflt 65262
     * }
     */
    public static int XKB_KEY_Pointer_DblClick_Dflt() {
        return XKB_KEY_Pointer_DblClick_Dflt;
    }
    private static final int XKB_KEY_Pointer_DblClick1 = (int)65263L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DblClick1 65263
     * }
     */
    public static int XKB_KEY_Pointer_DblClick1() {
        return XKB_KEY_Pointer_DblClick1;
    }
    private static final int XKB_KEY_Pointer_DblClick2 = (int)65264L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DblClick2 65264
     * }
     */
    public static int XKB_KEY_Pointer_DblClick2() {
        return XKB_KEY_Pointer_DblClick2;
    }
    private static final int XKB_KEY_Pointer_DblClick3 = (int)65265L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DblClick3 65265
     * }
     */
    public static int XKB_KEY_Pointer_DblClick3() {
        return XKB_KEY_Pointer_DblClick3;
    }
    private static final int XKB_KEY_Pointer_DblClick4 = (int)65266L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DblClick4 65266
     * }
     */
    public static int XKB_KEY_Pointer_DblClick4() {
        return XKB_KEY_Pointer_DblClick4;
    }
    private static final int XKB_KEY_Pointer_DblClick5 = (int)65267L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DblClick5 65267
     * }
     */
    public static int XKB_KEY_Pointer_DblClick5() {
        return XKB_KEY_Pointer_DblClick5;
    }
    private static final int XKB_KEY_Pointer_Drag_Dflt = (int)65268L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Drag_Dflt 65268
     * }
     */
    public static int XKB_KEY_Pointer_Drag_Dflt() {
        return XKB_KEY_Pointer_Drag_Dflt;
    }
    private static final int XKB_KEY_Pointer_Drag1 = (int)65269L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Drag1 65269
     * }
     */
    public static int XKB_KEY_Pointer_Drag1() {
        return XKB_KEY_Pointer_Drag1;
    }
    private static final int XKB_KEY_Pointer_Drag2 = (int)65270L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Drag2 65270
     * }
     */
    public static int XKB_KEY_Pointer_Drag2() {
        return XKB_KEY_Pointer_Drag2;
    }
    private static final int XKB_KEY_Pointer_Drag3 = (int)65271L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Drag3 65271
     * }
     */
    public static int XKB_KEY_Pointer_Drag3() {
        return XKB_KEY_Pointer_Drag3;
    }
    private static final int XKB_KEY_Pointer_Drag4 = (int)65272L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Drag4 65272
     * }
     */
    public static int XKB_KEY_Pointer_Drag4() {
        return XKB_KEY_Pointer_Drag4;
    }
    private static final int XKB_KEY_Pointer_Drag5 = (int)65277L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Drag5 65277
     * }
     */
    public static int XKB_KEY_Pointer_Drag5() {
        return XKB_KEY_Pointer_Drag5;
    }
    private static final int XKB_KEY_Pointer_EnableKeys = (int)65273L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_EnableKeys 65273
     * }
     */
    public static int XKB_KEY_Pointer_EnableKeys() {
        return XKB_KEY_Pointer_EnableKeys;
    }
    private static final int XKB_KEY_Pointer_Accelerate = (int)65274L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_Accelerate 65274
     * }
     */
    public static int XKB_KEY_Pointer_Accelerate() {
        return XKB_KEY_Pointer_Accelerate;
    }
    private static final int XKB_KEY_Pointer_DfltBtnNext = (int)65275L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DfltBtnNext 65275
     * }
     */
    public static int XKB_KEY_Pointer_DfltBtnNext() {
        return XKB_KEY_Pointer_DfltBtnNext;
    }
    private static final int XKB_KEY_Pointer_DfltBtnPrev = (int)65276L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Pointer_DfltBtnPrev 65276
     * }
     */
    public static int XKB_KEY_Pointer_DfltBtnPrev() {
        return XKB_KEY_Pointer_DfltBtnPrev;
    }
    private static final int XKB_KEY_ch = (int)65184L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ch 65184
     * }
     */
    public static int XKB_KEY_ch() {
        return XKB_KEY_ch;
    }
    private static final int XKB_KEY_Ch = (int)65185L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ch 65185
     * }
     */
    public static int XKB_KEY_Ch() {
        return XKB_KEY_Ch;
    }
    private static final int XKB_KEY_CH = (int)65186L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_CH 65186
     * }
     */
    public static int XKB_KEY_CH() {
        return XKB_KEY_CH;
    }
    private static final int XKB_KEY_c_h = (int)65187L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_c_h 65187
     * }
     */
    public static int XKB_KEY_c_h() {
        return XKB_KEY_c_h;
    }
    private static final int XKB_KEY_C_h = (int)65188L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_C_h 65188
     * }
     */
    public static int XKB_KEY_C_h() {
        return XKB_KEY_C_h;
    }
    private static final int XKB_KEY_C_H = (int)65189L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_C_H 65189
     * }
     */
    public static int XKB_KEY_C_H() {
        return XKB_KEY_C_H;
    }
    private static final int XKB_KEY_3270_Duplicate = (int)64769L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Duplicate 64769
     * }
     */
    public static int XKB_KEY_3270_Duplicate() {
        return XKB_KEY_3270_Duplicate;
    }
    private static final int XKB_KEY_3270_FieldMark = (int)64770L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_FieldMark 64770
     * }
     */
    public static int XKB_KEY_3270_FieldMark() {
        return XKB_KEY_3270_FieldMark;
    }
    private static final int XKB_KEY_3270_Right2 = (int)64771L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Right2 64771
     * }
     */
    public static int XKB_KEY_3270_Right2() {
        return XKB_KEY_3270_Right2;
    }
    private static final int XKB_KEY_3270_Left2 = (int)64772L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Left2 64772
     * }
     */
    public static int XKB_KEY_3270_Left2() {
        return XKB_KEY_3270_Left2;
    }
    private static final int XKB_KEY_3270_BackTab = (int)64773L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_BackTab 64773
     * }
     */
    public static int XKB_KEY_3270_BackTab() {
        return XKB_KEY_3270_BackTab;
    }
    private static final int XKB_KEY_3270_EraseEOF = (int)64774L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_EraseEOF 64774
     * }
     */
    public static int XKB_KEY_3270_EraseEOF() {
        return XKB_KEY_3270_EraseEOF;
    }
    private static final int XKB_KEY_3270_EraseInput = (int)64775L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_EraseInput 64775
     * }
     */
    public static int XKB_KEY_3270_EraseInput() {
        return XKB_KEY_3270_EraseInput;
    }
    private static final int XKB_KEY_3270_Reset = (int)64776L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Reset 64776
     * }
     */
    public static int XKB_KEY_3270_Reset() {
        return XKB_KEY_3270_Reset;
    }
    private static final int XKB_KEY_3270_Quit = (int)64777L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Quit 64777
     * }
     */
    public static int XKB_KEY_3270_Quit() {
        return XKB_KEY_3270_Quit;
    }
    private static final int XKB_KEY_3270_PA1 = (int)64778L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_PA1 64778
     * }
     */
    public static int XKB_KEY_3270_PA1() {
        return XKB_KEY_3270_PA1;
    }
    private static final int XKB_KEY_3270_PA2 = (int)64779L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_PA2 64779
     * }
     */
    public static int XKB_KEY_3270_PA2() {
        return XKB_KEY_3270_PA2;
    }
    private static final int XKB_KEY_3270_PA3 = (int)64780L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_PA3 64780
     * }
     */
    public static int XKB_KEY_3270_PA3() {
        return XKB_KEY_3270_PA3;
    }
    private static final int XKB_KEY_3270_Test = (int)64781L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Test 64781
     * }
     */
    public static int XKB_KEY_3270_Test() {
        return XKB_KEY_3270_Test;
    }
    private static final int XKB_KEY_3270_Attn = (int)64782L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Attn 64782
     * }
     */
    public static int XKB_KEY_3270_Attn() {
        return XKB_KEY_3270_Attn;
    }
    private static final int XKB_KEY_3270_CursorBlink = (int)64783L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_CursorBlink 64783
     * }
     */
    public static int XKB_KEY_3270_CursorBlink() {
        return XKB_KEY_3270_CursorBlink;
    }
    private static final int XKB_KEY_3270_AltCursor = (int)64784L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_AltCursor 64784
     * }
     */
    public static int XKB_KEY_3270_AltCursor() {
        return XKB_KEY_3270_AltCursor;
    }
    private static final int XKB_KEY_3270_KeyClick = (int)64785L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_KeyClick 64785
     * }
     */
    public static int XKB_KEY_3270_KeyClick() {
        return XKB_KEY_3270_KeyClick;
    }
    private static final int XKB_KEY_3270_Jump = (int)64786L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Jump 64786
     * }
     */
    public static int XKB_KEY_3270_Jump() {
        return XKB_KEY_3270_Jump;
    }
    private static final int XKB_KEY_3270_Ident = (int)64787L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Ident 64787
     * }
     */
    public static int XKB_KEY_3270_Ident() {
        return XKB_KEY_3270_Ident;
    }
    private static final int XKB_KEY_3270_Rule = (int)64788L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Rule 64788
     * }
     */
    public static int XKB_KEY_3270_Rule() {
        return XKB_KEY_3270_Rule;
    }
    private static final int XKB_KEY_3270_Copy = (int)64789L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Copy 64789
     * }
     */
    public static int XKB_KEY_3270_Copy() {
        return XKB_KEY_3270_Copy;
    }
    private static final int XKB_KEY_3270_Play = (int)64790L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Play 64790
     * }
     */
    public static int XKB_KEY_3270_Play() {
        return XKB_KEY_3270_Play;
    }
    private static final int XKB_KEY_3270_Setup = (int)64791L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Setup 64791
     * }
     */
    public static int XKB_KEY_3270_Setup() {
        return XKB_KEY_3270_Setup;
    }
    private static final int XKB_KEY_3270_Record = (int)64792L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Record 64792
     * }
     */
    public static int XKB_KEY_3270_Record() {
        return XKB_KEY_3270_Record;
    }
    private static final int XKB_KEY_3270_ChangeScreen = (int)64793L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_ChangeScreen 64793
     * }
     */
    public static int XKB_KEY_3270_ChangeScreen() {
        return XKB_KEY_3270_ChangeScreen;
    }
    private static final int XKB_KEY_3270_DeleteWord = (int)64794L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_DeleteWord 64794
     * }
     */
    public static int XKB_KEY_3270_DeleteWord() {
        return XKB_KEY_3270_DeleteWord;
    }
    private static final int XKB_KEY_3270_ExSelect = (int)64795L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_ExSelect 64795
     * }
     */
    public static int XKB_KEY_3270_ExSelect() {
        return XKB_KEY_3270_ExSelect;
    }
    private static final int XKB_KEY_3270_CursorSelect = (int)64796L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_CursorSelect 64796
     * }
     */
    public static int XKB_KEY_3270_CursorSelect() {
        return XKB_KEY_3270_CursorSelect;
    }
    private static final int XKB_KEY_3270_PrintScreen = (int)64797L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_PrintScreen 64797
     * }
     */
    public static int XKB_KEY_3270_PrintScreen() {
        return XKB_KEY_3270_PrintScreen;
    }
    private static final int XKB_KEY_3270_Enter = (int)64798L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3270_Enter 64798
     * }
     */
    public static int XKB_KEY_3270_Enter() {
        return XKB_KEY_3270_Enter;
    }
    private static final int XKB_KEY_space = (int)32L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_space 32
     * }
     */
    public static int XKB_KEY_space() {
        return XKB_KEY_space;
    }
    private static final int XKB_KEY_exclam = (int)33L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_exclam 33
     * }
     */
    public static int XKB_KEY_exclam() {
        return XKB_KEY_exclam;
    }
    private static final int XKB_KEY_quotedbl = (int)34L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_quotedbl 34
     * }
     */
    public static int XKB_KEY_quotedbl() {
        return XKB_KEY_quotedbl;
    }
    private static final int XKB_KEY_numbersign = (int)35L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_numbersign 35
     * }
     */
    public static int XKB_KEY_numbersign() {
        return XKB_KEY_numbersign;
    }
    private static final int XKB_KEY_dollar = (int)36L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_dollar 36
     * }
     */
    public static int XKB_KEY_dollar() {
        return XKB_KEY_dollar;
    }
    private static final int XKB_KEY_percent = (int)37L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_percent 37
     * }
     */
    public static int XKB_KEY_percent() {
        return XKB_KEY_percent;
    }
    private static final int XKB_KEY_ampersand = (int)38L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ampersand 38
     * }
     */
    public static int XKB_KEY_ampersand() {
        return XKB_KEY_ampersand;
    }
    private static final int XKB_KEY_apostrophe = (int)39L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_apostrophe 39
     * }
     */
    public static int XKB_KEY_apostrophe() {
        return XKB_KEY_apostrophe;
    }
    private static final int XKB_KEY_quoteright = (int)39L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_quoteright 39
     * }
     */
    public static int XKB_KEY_quoteright() {
        return XKB_KEY_quoteright;
    }
    private static final int XKB_KEY_parenleft = (int)40L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_parenleft 40
     * }
     */
    public static int XKB_KEY_parenleft() {
        return XKB_KEY_parenleft;
    }
    private static final int XKB_KEY_parenright = (int)41L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_parenright 41
     * }
     */
    public static int XKB_KEY_parenright() {
        return XKB_KEY_parenright;
    }
    private static final int XKB_KEY_asterisk = (int)42L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_asterisk 42
     * }
     */
    public static int XKB_KEY_asterisk() {
        return XKB_KEY_asterisk;
    }
    private static final int XKB_KEY_plus = (int)43L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_plus 43
     * }
     */
    public static int XKB_KEY_plus() {
        return XKB_KEY_plus;
    }
    private static final int XKB_KEY_comma = (int)44L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_comma 44
     * }
     */
    public static int XKB_KEY_comma() {
        return XKB_KEY_comma;
    }
    private static final int XKB_KEY_minus = (int)45L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_minus 45
     * }
     */
    public static int XKB_KEY_minus() {
        return XKB_KEY_minus;
    }
    private static final int XKB_KEY_period = (int)46L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_period 46
     * }
     */
    public static int XKB_KEY_period() {
        return XKB_KEY_period;
    }
    private static final int XKB_KEY_slash = (int)47L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_slash 47
     * }
     */
    public static int XKB_KEY_slash() {
        return XKB_KEY_slash;
    }
    private static final int XKB_KEY_0 = (int)48L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_0 48
     * }
     */
    public static int XKB_KEY_0() {
        return XKB_KEY_0;
    }
    private static final int XKB_KEY_1 = (int)49L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_1 49
     * }
     */
    public static int XKB_KEY_1() {
        return XKB_KEY_1;
    }
    private static final int XKB_KEY_2 = (int)50L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_2 50
     * }
     */
    public static int XKB_KEY_2() {
        return XKB_KEY_2;
    }
    private static final int XKB_KEY_3 = (int)51L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_3 51
     * }
     */
    public static int XKB_KEY_3() {
        return XKB_KEY_3;
    }
    private static final int XKB_KEY_4 = (int)52L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_4 52
     * }
     */
    public static int XKB_KEY_4() {
        return XKB_KEY_4;
    }
    private static final int XKB_KEY_5 = (int)53L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_5 53
     * }
     */
    public static int XKB_KEY_5() {
        return XKB_KEY_5;
    }
    private static final int XKB_KEY_6 = (int)54L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_6 54
     * }
     */
    public static int XKB_KEY_6() {
        return XKB_KEY_6;
    }
    private static final int XKB_KEY_7 = (int)55L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_7 55
     * }
     */
    public static int XKB_KEY_7() {
        return XKB_KEY_7;
    }
    private static final int XKB_KEY_8 = (int)56L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_8 56
     * }
     */
    public static int XKB_KEY_8() {
        return XKB_KEY_8;
    }
    private static final int XKB_KEY_9 = (int)57L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_9 57
     * }
     */
    public static int XKB_KEY_9() {
        return XKB_KEY_9;
    }
    private static final int XKB_KEY_colon = (int)58L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_colon 58
     * }
     */
    public static int XKB_KEY_colon() {
        return XKB_KEY_colon;
    }
    private static final int XKB_KEY_semicolon = (int)59L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_semicolon 59
     * }
     */
    public static int XKB_KEY_semicolon() {
        return XKB_KEY_semicolon;
    }
    private static final int XKB_KEY_less = (int)60L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_less 60
     * }
     */
    public static int XKB_KEY_less() {
        return XKB_KEY_less;
    }
    private static final int XKB_KEY_equal = (int)61L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_equal 61
     * }
     */
    public static int XKB_KEY_equal() {
        return XKB_KEY_equal;
    }
    private static final int XKB_KEY_greater = (int)62L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_greater 62
     * }
     */
    public static int XKB_KEY_greater() {
        return XKB_KEY_greater;
    }
    private static final int XKB_KEY_question = (int)63L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_question 63
     * }
     */
    public static int XKB_KEY_question() {
        return XKB_KEY_question;
    }
    private static final int XKB_KEY_at = (int)64L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_at 64
     * }
     */
    public static int XKB_KEY_at() {
        return XKB_KEY_at;
    }
    private static final int XKB_KEY_A = (int)65L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_A 65
     * }
     */
    public static int XKB_KEY_A() {
        return XKB_KEY_A;
    }
    private static final int XKB_KEY_B = (int)66L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_B 66
     * }
     */
    public static int XKB_KEY_B() {
        return XKB_KEY_B;
    }
    private static final int XKB_KEY_C = (int)67L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_C 67
     * }
     */
    public static int XKB_KEY_C() {
        return XKB_KEY_C;
    }
    private static final int XKB_KEY_D = (int)68L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_D 68
     * }
     */
    public static int XKB_KEY_D() {
        return XKB_KEY_D;
    }
    private static final int XKB_KEY_E = (int)69L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_E 69
     * }
     */
    public static int XKB_KEY_E() {
        return XKB_KEY_E;
    }
    private static final int XKB_KEY_F = (int)70L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_F 70
     * }
     */
    public static int XKB_KEY_F() {
        return XKB_KEY_F;
    }
    private static final int XKB_KEY_G = (int)71L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_G 71
     * }
     */
    public static int XKB_KEY_G() {
        return XKB_KEY_G;
    }
    private static final int XKB_KEY_H = (int)72L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_H 72
     * }
     */
    public static int XKB_KEY_H() {
        return XKB_KEY_H;
    }
    private static final int XKB_KEY_I = (int)73L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_I 73
     * }
     */
    public static int XKB_KEY_I() {
        return XKB_KEY_I;
    }
    private static final int XKB_KEY_J = (int)74L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_J 74
     * }
     */
    public static int XKB_KEY_J() {
        return XKB_KEY_J;
    }
    private static final int XKB_KEY_K = (int)75L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_K 75
     * }
     */
    public static int XKB_KEY_K() {
        return XKB_KEY_K;
    }
    private static final int XKB_KEY_L = (int)76L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_L 76
     * }
     */
    public static int XKB_KEY_L() {
        return XKB_KEY_L;
    }
    private static final int XKB_KEY_M = (int)77L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_M 77
     * }
     */
    public static int XKB_KEY_M() {
        return XKB_KEY_M;
    }
    private static final int XKB_KEY_N = (int)78L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_N 78
     * }
     */
    public static int XKB_KEY_N() {
        return XKB_KEY_N;
    }
    private static final int XKB_KEY_O = (int)79L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_O 79
     * }
     */
    public static int XKB_KEY_O() {
        return XKB_KEY_O;
    }
    private static final int XKB_KEY_P = (int)80L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_P 80
     * }
     */
    public static int XKB_KEY_P() {
        return XKB_KEY_P;
    }
    private static final int XKB_KEY_Q = (int)81L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Q 81
     * }
     */
    public static int XKB_KEY_Q() {
        return XKB_KEY_Q;
    }
    private static final int XKB_KEY_R = (int)82L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_R 82
     * }
     */
    public static int XKB_KEY_R() {
        return XKB_KEY_R;
    }
    private static final int XKB_KEY_S = (int)83L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_S 83
     * }
     */
    public static int XKB_KEY_S() {
        return XKB_KEY_S;
    }
    private static final int XKB_KEY_T = (int)84L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_T 84
     * }
     */
    public static int XKB_KEY_T() {
        return XKB_KEY_T;
    }
    private static final int XKB_KEY_U = (int)85L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_U 85
     * }
     */
    public static int XKB_KEY_U() {
        return XKB_KEY_U;
    }
    private static final int XKB_KEY_V = (int)86L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_V 86
     * }
     */
    public static int XKB_KEY_V() {
        return XKB_KEY_V;
    }
    private static final int XKB_KEY_W = (int)87L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_W 87
     * }
     */
    public static int XKB_KEY_W() {
        return XKB_KEY_W;
    }
    private static final int XKB_KEY_X = (int)88L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_X 88
     * }
     */
    public static int XKB_KEY_X() {
        return XKB_KEY_X;
    }
    private static final int XKB_KEY_Y = (int)89L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Y 89
     * }
     */
    public static int XKB_KEY_Y() {
        return XKB_KEY_Y;
    }
    private static final int XKB_KEY_Z = (int)90L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Z 90
     * }
     */
    public static int XKB_KEY_Z() {
        return XKB_KEY_Z;
    }
    private static final int XKB_KEY_bracketleft = (int)91L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_bracketleft 91
     * }
     */
    public static int XKB_KEY_bracketleft() {
        return XKB_KEY_bracketleft;
    }
    private static final int XKB_KEY_backslash = (int)92L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_backslash 92
     * }
     */
    public static int XKB_KEY_backslash() {
        return XKB_KEY_backslash;
    }
    private static final int XKB_KEY_bracketright = (int)93L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_bracketright 93
     * }
     */
    public static int XKB_KEY_bracketright() {
        return XKB_KEY_bracketright;
    }
    private static final int XKB_KEY_asciicircum = (int)94L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_asciicircum 94
     * }
     */
    public static int XKB_KEY_asciicircum() {
        return XKB_KEY_asciicircum;
    }
    private static final int XKB_KEY_underscore = (int)95L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_underscore 95
     * }
     */
    public static int XKB_KEY_underscore() {
        return XKB_KEY_underscore;
    }
    private static final int XKB_KEY_grave = (int)96L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_grave 96
     * }
     */
    public static int XKB_KEY_grave() {
        return XKB_KEY_grave;
    }
    private static final int XKB_KEY_quoteleft = (int)96L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_quoteleft 96
     * }
     */
    public static int XKB_KEY_quoteleft() {
        return XKB_KEY_quoteleft;
    }
    private static final int XKB_KEY_a = (int)97L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_a 97
     * }
     */
    public static int XKB_KEY_a() {
        return XKB_KEY_a;
    }
    private static final int XKB_KEY_b = (int)98L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_b 98
     * }
     */
    public static int XKB_KEY_b() {
        return XKB_KEY_b;
    }
    private static final int XKB_KEY_c = (int)99L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_c 99
     * }
     */
    public static int XKB_KEY_c() {
        return XKB_KEY_c;
    }
    private static final int XKB_KEY_d = (int)100L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_d 100
     * }
     */
    public static int XKB_KEY_d() {
        return XKB_KEY_d;
    }
    private static final int XKB_KEY_e = (int)101L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_e 101
     * }
     */
    public static int XKB_KEY_e() {
        return XKB_KEY_e;
    }
    private static final int XKB_KEY_f = (int)102L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_f 102
     * }
     */
    public static int XKB_KEY_f() {
        return XKB_KEY_f;
    }
    private static final int XKB_KEY_g = (int)103L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_g 103
     * }
     */
    public static int XKB_KEY_g() {
        return XKB_KEY_g;
    }
    private static final int XKB_KEY_h = (int)104L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_h 104
     * }
     */
    public static int XKB_KEY_h() {
        return XKB_KEY_h;
    }
    private static final int XKB_KEY_i = (int)105L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_i 105
     * }
     */
    public static int XKB_KEY_i() {
        return XKB_KEY_i;
    }
    private static final int XKB_KEY_j = (int)106L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_j 106
     * }
     */
    public static int XKB_KEY_j() {
        return XKB_KEY_j;
    }
    private static final int XKB_KEY_k = (int)107L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_k 107
     * }
     */
    public static int XKB_KEY_k() {
        return XKB_KEY_k;
    }
    private static final int XKB_KEY_l = (int)108L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_l 108
     * }
     */
    public static int XKB_KEY_l() {
        return XKB_KEY_l;
    }
    private static final int XKB_KEY_m = (int)109L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_m 109
     * }
     */
    public static int XKB_KEY_m() {
        return XKB_KEY_m;
    }
    private static final int XKB_KEY_n = (int)110L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_n 110
     * }
     */
    public static int XKB_KEY_n() {
        return XKB_KEY_n;
    }
    private static final int XKB_KEY_o = (int)111L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_o 111
     * }
     */
    public static int XKB_KEY_o() {
        return XKB_KEY_o;
    }
    private static final int XKB_KEY_p = (int)112L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_p 112
     * }
     */
    public static int XKB_KEY_p() {
        return XKB_KEY_p;
    }
    private static final int XKB_KEY_q = (int)113L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_q 113
     * }
     */
    public static int XKB_KEY_q() {
        return XKB_KEY_q;
    }
    private static final int XKB_KEY_r = (int)114L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_r 114
     * }
     */
    public static int XKB_KEY_r() {
        return XKB_KEY_r;
    }
    private static final int XKB_KEY_s = (int)115L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_s 115
     * }
     */
    public static int XKB_KEY_s() {
        return XKB_KEY_s;
    }
    private static final int XKB_KEY_t = (int)116L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_t 116
     * }
     */
    public static int XKB_KEY_t() {
        return XKB_KEY_t;
    }
    private static final int XKB_KEY_u = (int)117L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_u 117
     * }
     */
    public static int XKB_KEY_u() {
        return XKB_KEY_u;
    }
    private static final int XKB_KEY_v = (int)118L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_v 118
     * }
     */
    public static int XKB_KEY_v() {
        return XKB_KEY_v;
    }
    private static final int XKB_KEY_w = (int)119L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_w 119
     * }
     */
    public static int XKB_KEY_w() {
        return XKB_KEY_w;
    }
    private static final int XKB_KEY_x = (int)120L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_x 120
     * }
     */
    public static int XKB_KEY_x() {
        return XKB_KEY_x;
    }
    private static final int XKB_KEY_y = (int)121L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_y 121
     * }
     */
    public static int XKB_KEY_y() {
        return XKB_KEY_y;
    }
    private static final int XKB_KEY_z = (int)122L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_z 122
     * }
     */
    public static int XKB_KEY_z() {
        return XKB_KEY_z;
    }
    private static final int XKB_KEY_braceleft = (int)123L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_braceleft 123
     * }
     */
    public static int XKB_KEY_braceleft() {
        return XKB_KEY_braceleft;
    }
    private static final int XKB_KEY_bar = (int)124L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_bar 124
     * }
     */
    public static int XKB_KEY_bar() {
        return XKB_KEY_bar;
    }
    private static final int XKB_KEY_braceright = (int)125L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_braceright 125
     * }
     */
    public static int XKB_KEY_braceright() {
        return XKB_KEY_braceright;
    }
    private static final int XKB_KEY_asciitilde = (int)126L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_asciitilde 126
     * }
     */
    public static int XKB_KEY_asciitilde() {
        return XKB_KEY_asciitilde;
    }
    private static final int XKB_KEY_nobreakspace = (int)160L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_nobreakspace 160
     * }
     */
    public static int XKB_KEY_nobreakspace() {
        return XKB_KEY_nobreakspace;
    }
    private static final int XKB_KEY_exclamdown = (int)161L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_exclamdown 161
     * }
     */
    public static int XKB_KEY_exclamdown() {
        return XKB_KEY_exclamdown;
    }
    private static final int XKB_KEY_cent = (int)162L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_cent 162
     * }
     */
    public static int XKB_KEY_cent() {
        return XKB_KEY_cent;
    }
    private static final int XKB_KEY_sterling = (int)163L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_sterling 163
     * }
     */
    public static int XKB_KEY_sterling() {
        return XKB_KEY_sterling;
    }
    private static final int XKB_KEY_currency = (int)164L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_currency 164
     * }
     */
    public static int XKB_KEY_currency() {
        return XKB_KEY_currency;
    }
    private static final int XKB_KEY_yen = (int)165L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_yen 165
     * }
     */
    public static int XKB_KEY_yen() {
        return XKB_KEY_yen;
    }
    private static final int XKB_KEY_brokenbar = (int)166L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_brokenbar 166
     * }
     */
    public static int XKB_KEY_brokenbar() {
        return XKB_KEY_brokenbar;
    }
    private static final int XKB_KEY_section = (int)167L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_section 167
     * }
     */
    public static int XKB_KEY_section() {
        return XKB_KEY_section;
    }
    private static final int XKB_KEY_diaeresis = (int)168L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_diaeresis 168
     * }
     */
    public static int XKB_KEY_diaeresis() {
        return XKB_KEY_diaeresis;
    }
    private static final int XKB_KEY_copyright = (int)169L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_copyright 169
     * }
     */
    public static int XKB_KEY_copyright() {
        return XKB_KEY_copyright;
    }
    private static final int XKB_KEY_ordfeminine = (int)170L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ordfeminine 170
     * }
     */
    public static int XKB_KEY_ordfeminine() {
        return XKB_KEY_ordfeminine;
    }
    private static final int XKB_KEY_guillemotleft = (int)171L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_guillemotleft 171
     * }
     */
    public static int XKB_KEY_guillemotleft() {
        return XKB_KEY_guillemotleft;
    }
    private static final int XKB_KEY_guillemetleft = (int)171L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_guillemetleft 171
     * }
     */
    public static int XKB_KEY_guillemetleft() {
        return XKB_KEY_guillemetleft;
    }
    private static final int XKB_KEY_notsign = (int)172L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_notsign 172
     * }
     */
    public static int XKB_KEY_notsign() {
        return XKB_KEY_notsign;
    }
    private static final int XKB_KEY_hyphen = (int)173L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_hyphen 173
     * }
     */
    public static int XKB_KEY_hyphen() {
        return XKB_KEY_hyphen;
    }
    private static final int XKB_KEY_registered = (int)174L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_registered 174
     * }
     */
    public static int XKB_KEY_registered() {
        return XKB_KEY_registered;
    }
    private static final int XKB_KEY_macron = (int)175L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_macron 175
     * }
     */
    public static int XKB_KEY_macron() {
        return XKB_KEY_macron;
    }
    private static final int XKB_KEY_degree = (int)176L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_degree 176
     * }
     */
    public static int XKB_KEY_degree() {
        return XKB_KEY_degree;
    }
    private static final int XKB_KEY_plusminus = (int)177L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_plusminus 177
     * }
     */
    public static int XKB_KEY_plusminus() {
        return XKB_KEY_plusminus;
    }
    private static final int XKB_KEY_twosuperior = (int)178L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_twosuperior 178
     * }
     */
    public static int XKB_KEY_twosuperior() {
        return XKB_KEY_twosuperior;
    }
    private static final int XKB_KEY_threesuperior = (int)179L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_threesuperior 179
     * }
     */
    public static int XKB_KEY_threesuperior() {
        return XKB_KEY_threesuperior;
    }
    private static final int XKB_KEY_acute = (int)180L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_acute 180
     * }
     */
    public static int XKB_KEY_acute() {
        return XKB_KEY_acute;
    }
    private static final int XKB_KEY_mu = (int)181L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_mu 181
     * }
     */
    public static int XKB_KEY_mu() {
        return XKB_KEY_mu;
    }
    private static final int XKB_KEY_paragraph = (int)182L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_paragraph 182
     * }
     */
    public static int XKB_KEY_paragraph() {
        return XKB_KEY_paragraph;
    }
    private static final int XKB_KEY_periodcentered = (int)183L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_periodcentered 183
     * }
     */
    public static int XKB_KEY_periodcentered() {
        return XKB_KEY_periodcentered;
    }
    private static final int XKB_KEY_cedilla = (int)184L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_cedilla 184
     * }
     */
    public static int XKB_KEY_cedilla() {
        return XKB_KEY_cedilla;
    }
    private static final int XKB_KEY_onesuperior = (int)185L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_onesuperior 185
     * }
     */
    public static int XKB_KEY_onesuperior() {
        return XKB_KEY_onesuperior;
    }
    private static final int XKB_KEY_masculine = (int)186L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_masculine 186
     * }
     */
    public static int XKB_KEY_masculine() {
        return XKB_KEY_masculine;
    }
    private static final int XKB_KEY_ordmasculine = (int)186L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ordmasculine 186
     * }
     */
    public static int XKB_KEY_ordmasculine() {
        return XKB_KEY_ordmasculine;
    }
    private static final int XKB_KEY_guillemotright = (int)187L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_guillemotright 187
     * }
     */
    public static int XKB_KEY_guillemotright() {
        return XKB_KEY_guillemotright;
    }
    private static final int XKB_KEY_guillemetright = (int)187L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_guillemetright 187
     * }
     */
    public static int XKB_KEY_guillemetright() {
        return XKB_KEY_guillemetright;
    }
    private static final int XKB_KEY_onequarter = (int)188L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_onequarter 188
     * }
     */
    public static int XKB_KEY_onequarter() {
        return XKB_KEY_onequarter;
    }
    private static final int XKB_KEY_onehalf = (int)189L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_onehalf 189
     * }
     */
    public static int XKB_KEY_onehalf() {
        return XKB_KEY_onehalf;
    }
    private static final int XKB_KEY_threequarters = (int)190L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_threequarters 190
     * }
     */
    public static int XKB_KEY_threequarters() {
        return XKB_KEY_threequarters;
    }
    private static final int XKB_KEY_questiondown = (int)191L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_questiondown 191
     * }
     */
    public static int XKB_KEY_questiondown() {
        return XKB_KEY_questiondown;
    }
    private static final int XKB_KEY_Agrave = (int)192L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Agrave 192
     * }
     */
    public static int XKB_KEY_Agrave() {
        return XKB_KEY_Agrave;
    }
    private static final int XKB_KEY_Aacute = (int)193L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Aacute 193
     * }
     */
    public static int XKB_KEY_Aacute() {
        return XKB_KEY_Aacute;
    }
    private static final int XKB_KEY_Acircumflex = (int)194L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Acircumflex 194
     * }
     */
    public static int XKB_KEY_Acircumflex() {
        return XKB_KEY_Acircumflex;
    }
    private static final int XKB_KEY_Atilde = (int)195L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Atilde 195
     * }
     */
    public static int XKB_KEY_Atilde() {
        return XKB_KEY_Atilde;
    }
    private static final int XKB_KEY_Adiaeresis = (int)196L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Adiaeresis 196
     * }
     */
    public static int XKB_KEY_Adiaeresis() {
        return XKB_KEY_Adiaeresis;
    }
    private static final int XKB_KEY_Aring = (int)197L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Aring 197
     * }
     */
    public static int XKB_KEY_Aring() {
        return XKB_KEY_Aring;
    }
    private static final int XKB_KEY_AE = (int)198L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_AE 198
     * }
     */
    public static int XKB_KEY_AE() {
        return XKB_KEY_AE;
    }
    private static final int XKB_KEY_Ccedilla = (int)199L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ccedilla 199
     * }
     */
    public static int XKB_KEY_Ccedilla() {
        return XKB_KEY_Ccedilla;
    }
    private static final int XKB_KEY_Egrave = (int)200L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Egrave 200
     * }
     */
    public static int XKB_KEY_Egrave() {
        return XKB_KEY_Egrave;
    }
    private static final int XKB_KEY_Eacute = (int)201L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Eacute 201
     * }
     */
    public static int XKB_KEY_Eacute() {
        return XKB_KEY_Eacute;
    }
    private static final int XKB_KEY_Ecircumflex = (int)202L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ecircumflex 202
     * }
     */
    public static int XKB_KEY_Ecircumflex() {
        return XKB_KEY_Ecircumflex;
    }
    private static final int XKB_KEY_Ediaeresis = (int)203L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ediaeresis 203
     * }
     */
    public static int XKB_KEY_Ediaeresis() {
        return XKB_KEY_Ediaeresis;
    }
    private static final int XKB_KEY_Igrave = (int)204L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Igrave 204
     * }
     */
    public static int XKB_KEY_Igrave() {
        return XKB_KEY_Igrave;
    }
    private static final int XKB_KEY_Iacute = (int)205L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Iacute 205
     * }
     */
    public static int XKB_KEY_Iacute() {
        return XKB_KEY_Iacute;
    }
    private static final int XKB_KEY_Icircumflex = (int)206L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Icircumflex 206
     * }
     */
    public static int XKB_KEY_Icircumflex() {
        return XKB_KEY_Icircumflex;
    }
    private static final int XKB_KEY_Idiaeresis = (int)207L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Idiaeresis 207
     * }
     */
    public static int XKB_KEY_Idiaeresis() {
        return XKB_KEY_Idiaeresis;
    }
    private static final int XKB_KEY_ETH = (int)208L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ETH 208
     * }
     */
    public static int XKB_KEY_ETH() {
        return XKB_KEY_ETH;
    }
    private static final int XKB_KEY_Eth = (int)208L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Eth 208
     * }
     */
    public static int XKB_KEY_Eth() {
        return XKB_KEY_Eth;
    }
    private static final int XKB_KEY_Ntilde = (int)209L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ntilde 209
     * }
     */
    public static int XKB_KEY_Ntilde() {
        return XKB_KEY_Ntilde;
    }
    private static final int XKB_KEY_Ograve = (int)210L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ograve 210
     * }
     */
    public static int XKB_KEY_Ograve() {
        return XKB_KEY_Ograve;
    }
    private static final int XKB_KEY_Oacute = (int)211L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Oacute 211
     * }
     */
    public static int XKB_KEY_Oacute() {
        return XKB_KEY_Oacute;
    }
    private static final int XKB_KEY_Ocircumflex = (int)212L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ocircumflex 212
     * }
     */
    public static int XKB_KEY_Ocircumflex() {
        return XKB_KEY_Ocircumflex;
    }
    private static final int XKB_KEY_Otilde = (int)213L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Otilde 213
     * }
     */
    public static int XKB_KEY_Otilde() {
        return XKB_KEY_Otilde;
    }
    private static final int XKB_KEY_Odiaeresis = (int)214L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Odiaeresis 214
     * }
     */
    public static int XKB_KEY_Odiaeresis() {
        return XKB_KEY_Odiaeresis;
    }
    private static final int XKB_KEY_multiply = (int)215L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_multiply 215
     * }
     */
    public static int XKB_KEY_multiply() {
        return XKB_KEY_multiply;
    }
    private static final int XKB_KEY_Oslash = (int)216L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Oslash 216
     * }
     */
    public static int XKB_KEY_Oslash() {
        return XKB_KEY_Oslash;
    }
    private static final int XKB_KEY_Ooblique = (int)216L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ooblique 216
     * }
     */
    public static int XKB_KEY_Ooblique() {
        return XKB_KEY_Ooblique;
    }
    private static final int XKB_KEY_Ugrave = (int)217L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ugrave 217
     * }
     */
    public static int XKB_KEY_Ugrave() {
        return XKB_KEY_Ugrave;
    }
    private static final int XKB_KEY_Uacute = (int)218L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Uacute 218
     * }
     */
    public static int XKB_KEY_Uacute() {
        return XKB_KEY_Uacute;
    }
    private static final int XKB_KEY_Ucircumflex = (int)219L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Ucircumflex 219
     * }
     */
    public static int XKB_KEY_Ucircumflex() {
        return XKB_KEY_Ucircumflex;
    }
    private static final int XKB_KEY_Udiaeresis = (int)220L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Udiaeresis 220
     * }
     */
    public static int XKB_KEY_Udiaeresis() {
        return XKB_KEY_Udiaeresis;
    }
    private static final int XKB_KEY_Yacute = (int)221L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Yacute 221
     * }
     */
    public static int XKB_KEY_Yacute() {
        return XKB_KEY_Yacute;
    }
    private static final int XKB_KEY_THORN = (int)222L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_THORN 222
     * }
     */
    public static int XKB_KEY_THORN() {
        return XKB_KEY_THORN;
    }
    private static final int XKB_KEY_Thorn = (int)222L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Thorn 222
     * }
     */
    public static int XKB_KEY_Thorn() {
        return XKB_KEY_Thorn;
    }
    private static final int XKB_KEY_ssharp = (int)223L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ssharp 223
     * }
     */
    public static int XKB_KEY_ssharp() {
        return XKB_KEY_ssharp;
    }
    private static final int XKB_KEY_agrave = (int)224L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_agrave 224
     * }
     */
    public static int XKB_KEY_agrave() {
        return XKB_KEY_agrave;
    }
    private static final int XKB_KEY_aacute = (int)225L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_aacute 225
     * }
     */
    public static int XKB_KEY_aacute() {
        return XKB_KEY_aacute;
    }
    private static final int XKB_KEY_acircumflex = (int)226L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_acircumflex 226
     * }
     */
    public static int XKB_KEY_acircumflex() {
        return XKB_KEY_acircumflex;
    }
    private static final int XKB_KEY_atilde = (int)227L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_atilde 227
     * }
     */
    public static int XKB_KEY_atilde() {
        return XKB_KEY_atilde;
    }
    private static final int XKB_KEY_adiaeresis = (int)228L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_adiaeresis 228
     * }
     */
    public static int XKB_KEY_adiaeresis() {
        return XKB_KEY_adiaeresis;
    }
    private static final int XKB_KEY_aring = (int)229L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_aring 229
     * }
     */
    public static int XKB_KEY_aring() {
        return XKB_KEY_aring;
    }
    private static final int XKB_KEY_ae = (int)230L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ae 230
     * }
     */
    public static int XKB_KEY_ae() {
        return XKB_KEY_ae;
    }
    private static final int XKB_KEY_ccedilla = (int)231L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ccedilla 231
     * }
     */
    public static int XKB_KEY_ccedilla() {
        return XKB_KEY_ccedilla;
    }
    private static final int XKB_KEY_egrave = (int)232L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_egrave 232
     * }
     */
    public static int XKB_KEY_egrave() {
        return XKB_KEY_egrave;
    }
    private static final int XKB_KEY_eacute = (int)233L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_eacute 233
     * }
     */
    public static int XKB_KEY_eacute() {
        return XKB_KEY_eacute;
    }
    private static final int XKB_KEY_ecircumflex = (int)234L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ecircumflex 234
     * }
     */
    public static int XKB_KEY_ecircumflex() {
        return XKB_KEY_ecircumflex;
    }
    private static final int XKB_KEY_ediaeresis = (int)235L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ediaeresis 235
     * }
     */
    public static int XKB_KEY_ediaeresis() {
        return XKB_KEY_ediaeresis;
    }
    private static final int XKB_KEY_igrave = (int)236L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_igrave 236
     * }
     */
    public static int XKB_KEY_igrave() {
        return XKB_KEY_igrave;
    }
    private static final int XKB_KEY_iacute = (int)237L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_iacute 237
     * }
     */
    public static int XKB_KEY_iacute() {
        return XKB_KEY_iacute;
    }
    private static final int XKB_KEY_icircumflex = (int)238L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_icircumflex 238
     * }
     */
    public static int XKB_KEY_icircumflex() {
        return XKB_KEY_icircumflex;
    }
    private static final int XKB_KEY_idiaeresis = (int)239L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_idiaeresis 239
     * }
     */
    public static int XKB_KEY_idiaeresis() {
        return XKB_KEY_idiaeresis;
    }
    private static final int XKB_KEY_eth = (int)240L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_eth 240
     * }
     */
    public static int XKB_KEY_eth() {
        return XKB_KEY_eth;
    }
    private static final int XKB_KEY_ntilde = (int)241L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ntilde 241
     * }
     */
    public static int XKB_KEY_ntilde() {
        return XKB_KEY_ntilde;
    }
    private static final int XKB_KEY_ograve = (int)242L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ograve 242
     * }
     */
    public static int XKB_KEY_ograve() {
        return XKB_KEY_ograve;
    }
    private static final int XKB_KEY_oacute = (int)243L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_oacute 243
     * }
     */
    public static int XKB_KEY_oacute() {
        return XKB_KEY_oacute;
    }
    private static final int XKB_KEY_ocircumflex = (int)244L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ocircumflex 244
     * }
     */
    public static int XKB_KEY_ocircumflex() {
        return XKB_KEY_ocircumflex;
    }
    private static final int XKB_KEY_otilde = (int)245L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_otilde 245
     * }
     */
    public static int XKB_KEY_otilde() {
        return XKB_KEY_otilde;
    }
    private static final int XKB_KEY_odiaeresis = (int)246L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_odiaeresis 246
     * }
     */
    public static int XKB_KEY_odiaeresis() {
        return XKB_KEY_odiaeresis;
    }
    private static final int XKB_KEY_division = (int)247L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_division 247
     * }
     */
    public static int XKB_KEY_division() {
        return XKB_KEY_division;
    }
    private static final int XKB_KEY_oslash = (int)248L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_oslash 248
     * }
     */
    public static int XKB_KEY_oslash() {
        return XKB_KEY_oslash;
    }
    private static final int XKB_KEY_ooblique = (int)248L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ooblique 248
     * }
     */
    public static int XKB_KEY_ooblique() {
        return XKB_KEY_ooblique;
    }
    private static final int XKB_KEY_ugrave = (int)249L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ugrave 249
     * }
     */
    public static int XKB_KEY_ugrave() {
        return XKB_KEY_ugrave;
    }
    private static final int XKB_KEY_uacute = (int)250L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_uacute 250
     * }
     */
    public static int XKB_KEY_uacute() {
        return XKB_KEY_uacute;
    }
    private static final int XKB_KEY_ucircumflex = (int)251L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ucircumflex 251
     * }
     */
    public static int XKB_KEY_ucircumflex() {
        return XKB_KEY_ucircumflex;
    }
    private static final int XKB_KEY_udiaeresis = (int)252L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_udiaeresis 252
     * }
     */
    public static int XKB_KEY_udiaeresis() {
        return XKB_KEY_udiaeresis;
    }
    private static final int XKB_KEY_yacute = (int)253L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_yacute 253
     * }
     */
    public static int XKB_KEY_yacute() {
        return XKB_KEY_yacute;
    }
    private static final int XKB_KEY_thorn = (int)254L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_thorn 254
     * }
     */
    public static int XKB_KEY_thorn() {
        return XKB_KEY_thorn;
    }
    private static final int XKB_KEY_ydiaeresis = (int)255L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ydiaeresis 255
     * }
     */
    public static int XKB_KEY_ydiaeresis() {
        return XKB_KEY_ydiaeresis;
    }
    private static final int XKB_KEY_Aogonek = (int)417L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Aogonek 417
     * }
     */
    public static int XKB_KEY_Aogonek() {
        return XKB_KEY_Aogonek;
    }
    private static final int XKB_KEY_breve = (int)418L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_breve 418
     * }
     */
    public static int XKB_KEY_breve() {
        return XKB_KEY_breve;
    }
    private static final int XKB_KEY_Lstroke = (int)419L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Lstroke 419
     * }
     */
    public static int XKB_KEY_Lstroke() {
        return XKB_KEY_Lstroke;
    }
    private static final int XKB_KEY_Lcaron = (int)421L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Lcaron 421
     * }
     */
    public static int XKB_KEY_Lcaron() {
        return XKB_KEY_Lcaron;
    }
    private static final int XKB_KEY_Sacute = (int)422L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Sacute 422
     * }
     */
    public static int XKB_KEY_Sacute() {
        return XKB_KEY_Sacute;
    }
    private static final int XKB_KEY_Scaron = (int)425L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Scaron 425
     * }
     */
    public static int XKB_KEY_Scaron() {
        return XKB_KEY_Scaron;
    }
    private static final int XKB_KEY_Scedilla = (int)426L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Scedilla 426
     * }
     */
    public static int XKB_KEY_Scedilla() {
        return XKB_KEY_Scedilla;
    }
    private static final int XKB_KEY_Tcaron = (int)427L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Tcaron 427
     * }
     */
    public static int XKB_KEY_Tcaron() {
        return XKB_KEY_Tcaron;
    }
    private static final int XKB_KEY_Zacute = (int)428L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Zacute 428
     * }
     */
    public static int XKB_KEY_Zacute() {
        return XKB_KEY_Zacute;
    }
    private static final int XKB_KEY_Zcaron = (int)430L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Zcaron 430
     * }
     */
    public static int XKB_KEY_Zcaron() {
        return XKB_KEY_Zcaron;
    }
    private static final int XKB_KEY_Zabovedot = (int)431L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_Zabovedot 431
     * }
     */
    public static int XKB_KEY_Zabovedot() {
        return XKB_KEY_Zabovedot;
    }
    private static final int XKB_KEY_aogonek = (int)433L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_aogonek 433
     * }
     */
    public static int XKB_KEY_aogonek() {
        return XKB_KEY_aogonek;
    }
    private static final int XKB_KEY_ogonek = (int)434L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_ogonek 434
     * }
     */
    public static int XKB_KEY_ogonek() {
        return XKB_KEY_ogonek;
    }
    private static final int XKB_KEY_lstroke = (int)435L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_lstroke 435
     * }
     */
    public static int XKB_KEY_lstroke() {
        return XKB_KEY_lstroke;
    }
    private static final int XKB_KEY_lcaron = (int)437L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_lcaron 437
     * }
     */
    public static int XKB_KEY_lcaron() {
        return XKB_KEY_lcaron;
    }
    private static final int XKB_KEY_sacute = (int)438L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_sacute 438
     * }
     */
    public static int XKB_KEY_sacute() {
        return XKB_KEY_sacute;
    }
    private static final int XKB_KEY_caron = (int)439L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_caron 439
     * }
     */
    public static int XKB_KEY_caron() {
        return XKB_KEY_caron;
    }
    private static final int XKB_KEY_scaron = (int)441L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_scaron 441
     * }
     */
    public static int XKB_KEY_scaron() {
        return XKB_KEY_scaron;
    }
    private static final int XKB_KEY_scedilla = (int)442L;
    /**
     * {@snippet lang=c :
     * #define XKB_KEY_scedilla 442
     * }
     */
    public static int XKB_KEY_scedilla() {
        return XKB_KEY_scedilla;
    }
}

